{"/en/about/":{"data":{"":"Hextra is designed to be a simple, fast, and flexible theme for building modern static websites. It is especially well-suited for documentation websites but can also be used for various types of sites, such as blogs, portfolios, and more.\nHugo, like Jekyll, is a static site generator. What sets Hugo apart is that it is a single binary, making it easy to install and run on various platforms. It is also extremely fast and reliable, capable of rendering a site with thousands of pages in milliseconds.\nHextra is built with a mindset focused on having a minimal footprint. To get started, no extra dependencies like Node.js packages are required; all you need is a single YAML configuration file, along with your Markdown content. Thus, we can focus on writing quality content instead of setting up tooling.","credits#Credits":"Hextra cannot be built without the following tools and inspirations:\nHugo Tailwind CSS Heroicons Nextra Next.js "},"title":"About"},"/en/blog/":{"data":{"":" "},"title":"Blog"},"/en/docs/":{"data":{"":"👋 Hello! Welcome to the Hextra documentation!","features#Features":" Beautiful Design - Inspired by Nextra, Hextra utilizes Tailwind CSS to offer a modern design that makes your site look outstanding. Responsive Layout and Dark Mode - It looks great on all devices, from mobile, tablet to desktop. Dark mode is also supported to accommodate various lighting conditions. Fast and Lightweight - Powered by Hugo, a lightning-fast static-site generator housed in a single binary file, Hextra keeps its footprint minimal. No JavaScript or Node.js are needed to use it. Full-text Search - Built-in offline full-text search powered by FlexSearch, no additional configuration required. Battery-included - Markdown, syntax highlighting, LaTeX math formulae, diagrams and Shortcodes elements to enhance your content. Table of contents, breadcrumbs, pagination, sidebar navigation and more are all automatically generated. Multi-language and SEO Ready - Multi-language sites made easy with Hugo’s multilingual mode. Out-of-the-box support is included for SEO tags, Open Graph, and Twitter Cards. ","next#Next":"Dive right into the following section to get started:\nGetting StartedLearn how to create website using Hextra ","questions-or-feedback#Questions or Feedback?":" ❓ Hextra is still in active development. Have a question or feedback? Feel free to open an issue! ","what-is-hextra#What is Hextra?":"Hextra is a modern, fast and batteries-included [Hugo][hugo] theme built with [Tailwind CSS][tailwind-css].\nDesigned for building beautiful websites for documentation, blogs, and websites, it provides out-of-the-box features and flexibility to meet various requirements."},"title":"Documentation"},"/en/docs/advanced/":{"data":{"":"This section covers some advanced topics of the theme.\nMulti-language Customization Comments System "},"title":"Advanced"},"/en/docs/advanced/_index.fa/":{"data":{"":"این بخش برخی از موضوعات پیشرفته تم را پوشش می‌دهد.\nچند زبانه سفارشی‌سازی سیستم نظردهی "},"title":"پیشرفته"},"/en/docs/advanced/_index.zh-cn/":{"data":{"":"此部分提供了 Hextra 的一些高级配置。\n多语言 定制化 "},"title":"高级配置"},"/en/docs/advanced/comments.fa/":{"data":{"":"هگزترا از افزودن سیستم نظردهی به سایت شما پشتیبانی می‌کند. در حال حاضر giscus پشتیبانی می‌شود.","giscus#giscus":"giscus یک سیستم نظردهی است که توسط GitHub Discussions طراحی شده است. رایگان و متن باز است.\nبرای فعال کردن giscus، باید موارد زیر را به پرونده پیکربندی سایت اضافه کنید:\nhugo.yamlparams: comments: enable: false type: giscus giscus: repo: \u003crepository\u003e repoId: \u003crepository ID\u003e category: \u003ccategory\u003e categoryId: \u003ccategory ID\u003e تنظیمات giscus را می توانید از وب‌سایت giscus.app ساخت. جزئیات بیشتر را نیز می‌توانید در آنجا ببینید.\nدیدگاه‌ها را می‌توانید برای یک صفحه خاص در بالای همان صفحه فعال یا غیرفعال کرد:\ncontent/docs/about.md--- title: درباره ما comments: true --- "},"title":"نظردهی"},"/en/docs/advanced/comments.zh-cn/":{"data":{"":"Hextra 支持在你的网站中添加评论系统。 目前已经支持 giscus.","giscus#giscus":"giscus 是由 GitHub Discussions驱动的评论系统。Giscus 免费并且开源。\n如需启用 Giscus, 你需要在配置文件中添加以下内容：\nhugo.yamlparams: comments: enable: false type: giscus giscus: repo: \u003crepository\u003e repoId: \u003crepository ID\u003e category: \u003ccategory\u003e categoryId: \u003ccategory ID\u003e Giscus 配置可以参考 giscus.app，还可以在那里找到更多详细信息。\n可以在 front matter 中启用或禁用特定页面的评论：\ncontent/docs/about.md--- title: About comments: true --- "},"title":"Comments"},"/en/docs/advanced/comments/":{"data":{"":"Hextra supports adding comments system to your site. Currently giscus is supported.","giscus#giscus":"giscus is a comments system powered by GitHub Discussions. It is free and open source.\nTo enable giscus, you need to add the following to the site configuration file:\nhugo.yamlparams: comments: enable: false type: giscus giscus: repo: \u003crepository\u003e repoId: \u003crepository ID\u003e category: \u003ccategory\u003e categoryId: \u003ccategory ID\u003e The giscus configurations can be constructed from the giscus.app website. More details can also be found there.\nComments can be enabled or disabled for a specific page in the page front matter:\ncontent/docs/about.md--- title: About comments: true --- "},"title":"Comments"},"/en/docs/advanced/customization.fa/":{"data":{"":"هگزترا برخی از گزینه‌های سفارشی‌سازی پیش‌فرض را در پرونده hugo.yaml برای پیکربندی تم ارائه می‌کند. این صفحه گزینه‌های موجود و نحوه سفارشی‌سازی بیشتر تم را توضیح می‌دهد.","css-سفارشی#CSS سفارشی":"برای افزودن CSS سفارشی، باید یک پرونده assets/css/custom.css در سایت خود ایجاد کنیم. هگزترا به طور خودکار این پرونده را بارگیری خواهد کرد.\nخانواده فونت خانواده فونت برای محتوا را می‌توانید با استفاده از این سفارشی کنید:\nassets/css/custom.css.content { font-family: \"Times New Roman\", Times, serif; } عنصر کد درون‌خطی رنگ متن ترکیب شده با متن دیگر را می‌توانید با موارد زیر سفارشی کرد:\nassets/css/custom.css.content code:not(.code-block code) { color: #c97c2e; } رنگ اصلی رنگ اصلی تم را می‌توانید با تنظیم متغیرهای --primary-hue و --primary-saturation سفارشی کرد:\nassets/css/custom.css:root { --primary-hue: 100deg; --primary-saturation: 90%; } برجسته‌کردن سینتکس فهرست تم‌های برجسته‌کردن سینتکس در دسترس گالری Chroma Styles موجود است. شیوه‌نامه را می‌توانید با استفاده از دستور زیر تولید کرد:\nhugo gen chromastyles --style=github برای نادیده گرفتن طرح زمینه برجسته‌کردن سینتکس پیش‌فرض، می‌توانید استایل‌های تولید شده را به پرونده CSS سفارشی اضافه کنیم.","اسکریپتهای-سفارشی#اسکریپت‌های سفارشی":"با افزودن پرونده زیر می‌توانید اسکریپت‌های سفارشی را برای هر صفحه به انتهای اون اضافه کنید:\nlayouts/partials/custom/head-end.html ","سفارشیسازی-بیشتر#سفارشی‌سازی بیشتر":"چیزی را که دنبالش بودید پیدا نکردید؟ با خیال راحت بحثی را باز کنید یا به موضوع کمک کنید!","طرحبندیهای-سفارشی#طرح‌بندی‌های سفارشی":"با ایجاد پرونده‌ای با همین نام در دایرکتوری layouts سایت خود، می‌توانید طرح‌های تم را نادیده بگیرید. به عنوان مثال، برای لغو طرح‌بندی single.html برای مستندات، یک پروندهlayouts/docs/single.html در سایت خود ایجاد کنید.\nبرای اطلاعات بیشتر، به Templateهای هیوگو مراجعه کنید."},"title":"سفارشی‌سازی"},"/en/docs/advanced/customization.zh-cn/":{"data":{"":"Hextra 在 hugo.yaml 中提供了一些自定义选项来配置主题。 本页介绍了可用选项以及如何进一步自定义主题。","自定义-css#自定义 CSS":"要添加自定义 CSS，我们需要在站点中创建一个文件 assets/css/custom.css。Hextra 将自动加载该文件，比如自定义字体：\nassets/css/custom.css.content { font-family: \"Times New Roman\", Times, serif; } 主题色 主题色可以通过设置 --primary-hue 变量来自定义：\nassets/css/custom.css:root { --primary-hue: 100deg; } 代码高亮 代码高亮风格的详细信息可在 Chroma Styles Gallery 中找到。可以使用以下命令生成样式表：\nhugo gen chromastyles --style=github 可将生成的样式添加到自定义 CSS 文件中以覆盖默认代码高亮样式。","自定义-script#自定义 Script":"你可以添加以下文件以自定义 script 添加到每页的 head 最后：\nlayouts/partials/custom/head-end.html ","自定义布局#自定义布局":"可以在站点的 layouts 目录中创建同名文件来覆盖主题的默认布局。 例如，要覆盖文档的 single.html 布局，在站点中创建文件 layouts/docs/single.html。\n如需或许更多信息，转至 Hugo Templates。","进一步定制-hextra#进一步定制 Hextra":"没有找到你想修改的内容？在 GitHub 上创建 Discussion 或为 Hextra 贡献你的智慧！"},"title":"自定义"},"/en/docs/advanced/customization/":{"data":{"":"Hextra offers some default customization options in the hugo.yaml config file to configure the theme. This page describes the available options and how to customize the theme further.","custom-css#Custom CSS":"To add custom CSS, we need to create a file assets/css/custom.css in our site. Hextra will automatically load this file.\nFont Family The font family of the content can be customized using:\nassets/css/custom.css.content { font-family: \"Times New Roman\", Times, serif; } Inline Code Element The color of text mixed with other text can customized with:\nassets/css/custom.css.content code:not(.code-block code) { color: #c97c2e; } Primary Color The primary color of the theme can be customized by setting the --primary-hue and --primary-saturation variables:\nassets/css/custom.css:root { --primary-hue: 100deg; --primary-saturation: 90%; } Syntax Highlighting List of available syntax highlighting themes are available at Chroma Styles Gallery. The stylesheet can be generated using the command:\nhugo gen chromastyles --style=github To override the default syntax highlighting theme, we can add the generated styles to the custom CSS file.","custom-layouts#Custom Layouts":"The layouts of the theme can be overridden by creating a file with the same name in the layouts directory of your site. For example, to override the single.html layout for docs, create a file layouts/docs/single.html in your site.\nFor further information, refer to the Hugo Templates.","custom-scripts#Custom Scripts":"You may add custom scripts to the end of the head for every page by adding the following file:\nlayouts/partials/custom/head-end.html ","further-customization#Further Customization":"Didn’t find what you were looking for? Feel free to open a discussion or make a contribution to the theme!"},"title":"Customization"},"/en/docs/advanced/multi-language.fa/":{"data":{"":"هگزترا از ایجاد سایت با چندین زبان با استفاده از حالت چند زبانه Hugo پشتیبانی می‌کند.","بیشتر-بخوانید#بیشتر بخوانید":" حالت چند زبانه هیوگو هیوگو چند زبانه قسمت ۱: ترجمه محتوا هیوگو چند زبانه قسمت ۲: بومی‌سازی رشته‌ها ","ترجمه-آیتمهای-منو#ترجمه آیتم‌های منو":"برای ترجمه آیتم‌های منو در نوار پیمایش، باید فیلد identifier را تنظیم کنیم:\nhugo.yamlmenu: main: - identifier: documentation name: Documentation pageRef: /docs weight: 1 - identifier: blog name: Blog pageRef: /blog weight: 2 و آنها را در پرونده i18n مربوطه ترجمه کنید:\ni18n/fa.yamldocumentation: مستندات blog: وبلاگ ","ترجمه-رشتهها#ترجمه رشته‌ها":"برای ترجمه رشته‌ها در مکان‌های دیگر، باید ترجمه را به پرونده i18n مربوطه اضافه کنیم:\ni18n/fa.yamlreadMore: ادامه مطلب فهرستی از رشته‌های استفاده شده در تم را می‌توان در پرونده i18n/en.yaml پیدا کرد.","فعالسازی-چند-زبانه#فعال‌سازی چند زبانه":"برای اینکه سایت ما چند زبانه شود، باید زبان‌های پشتیبانی شده را به Hugo بگوییم. باید به پرونده پیکربندی سایت اضافه کنیم:\nhugo.yamldefaultContentLanguage: en languages: en: languageName: English weight: 1 fa: languageName: فارسی weight: 2 ja: languageName: 日本語 weight: 3 ","مدیریت-ترجمهها-بر-اساس-نام-پرونده#مدیریت ترجمه‌ها بر اساس نام پرونده":"Hugo از مدیریت ترجمه با نام پرونده پشتیبانی می‌کند. به عنوان مثال، اگر یک پرونده content/docs/_index.md به زبان انگلیسی داشته باشیم، می توانیم یک پرونده content/docs/_index.fa.md برای ترجمه فارسی ایجاد کنیم.\ncontent docs _index.md _index.fa.md _index.ja.md توجه: Hugo همچنین از تترجمه توسط دایرکتوری محتوا پشتیبانی می‌کند."},"title":"چند زبانه"},"/en/docs/advanced/multi-language.zh-cn/":{"data":{"":"Hextra 支持使用 Hugo 的多语言模式 创建多语言的网站。","启用多语言支持#启用多语言支持":"为了使我们的网站支持多语言，我们需要告诉 Hugo 需要支持的语言。 在站点配置文件中添加：\nhugo.yamldefaultContentLanguage: en languages: en: languageName: English weight: 1 fr: languageName: Français weight: 2 ja: languageName: 日本語 weight: 3 ","按文件名管理翻译#按文件名管理翻译":"Hugo 支持按文件名管理翻译。例如，如果我们有一个英文文件 content/docs/_index.md，我们可以创建一个翻译为法语的文件 content/docs/_index.fr.md。\ncontent docs _index.md _index.fr.md _index.ja.md 注意：Hugo 还支持按内容目录管理翻译。","更多参考#更多参考":" Hugo Multilingual Mode Hugo Multilingual Part 1: Content translation Hugo Multilingual Part 2: Strings localization ","翻译字符串#翻译字符串":"要翻译其他地方的字符串，我们需要将翻译添加到相应的 i18n 文件中：\ni18n/fr.yamlreadMore: Lire la suite ","翻译菜单项#翻译菜单项":"要翻译导航栏中的菜单项，我们需要设置 identifier 字段：\nhugo.yamlmenu: main: - identifier: documentation name: Documentation pageRef: /docs weight: 1 - identifier: blog name: Blog pageRef: /blog weight: 2 "},"title":"多语言"},"/en/docs/advanced/multi-language/":{"data":{"":"Hextra supports creating site with multiple languages using Hugo’s multilingual mode.","enable-multi-language#Enable Multi-language":"To make our site multi-language, we need to tell Hugo the supported languages. We need to add to the site configuration file:\nhugo.yamldefaultContentLanguage: en languages: en: languageName: English weight: 1 fr: languageName: Français weight: 2 ja: languageName: 日本語 weight: 3 ","manage-translations-by-filename#Manage Translations by Filename":"Hugo supports managing translations by filename. For example, if we have a file content/docs/_index.md in English, we can create a file content/docs/_index.fr.md for French translation.\ncontent docs _index.md _index.fr.md _index.ja.md Note: Hugo also supports Translation by content directory.","read-more#Read More":" Hugo Multilingual Mode Hugo Multilingual Part 1: Content translation Hugo Multilingual Part 2: Strings localization ","translate-menu-items#Translate Menu Items":"To translate menu items in the navigation bar, we need to set the identifier field:\nhugo.yamlmenu: main: - identifier: documentation name: Documentation pageRef: /docs weight: 1 - identifier: blog name: Blog pageRef: /blog weight: 2 and translate them in the corresponding i18n file:\ni18n/fr.yamldocumentation: Documentation blog: Blog ","translate-strings#Translate Strings":"To translate strings on the other places, we need to add the translation to the corresponding i18n file:\ni18n/fr.yamlreadMore: Lire la suite A list of strings used in the theme can be found in the i18n/en.yaml file."},"title":"Multi-language"},"/en/docs/getting-started/":{"data":{"":"","next#Next":"Explore the following sections to start adding more contents:\nOrganize Files Configuration Markdown ","quick-start-from-template#Quick Start from Template":" imfing/hextra-starter-template\nYou could quickly get started by using the above template repository.\nWe have provided a GitHub Actions workflow which can help automatically build and deploy your site to GitHub Pages, and host it for free. For more options, check out Deploy Site.\n🌐 Demo ↗","start-as-new-project#Start as New Project":"There are two main ways to add the Hextra theme to your Hugo project:\nHugo Modules (Recommended): The simplest and recommended method. Hugo modules let you pull in the theme directly from its online source. Theme is downloaded automatically and managed by Hugo.\nGit Submodule: Alternatively, add Hextra as a Git Submodule. The theme is downloaded by Git and stored in your project’s themes folder.\nSetup Hextra as Hugo module Prerequisites Before starting, you need to have the following software installed:\nHugo (extended version) Git Go Steps Initialize a new Hugo site hugo new site my-site --format=yaml Configure Hextra theme via module # initialize hugo module cd my-site hugo mod init github.com/username/my-site # add Hextra theme hugo mod get github.com/imfing/hextra Configure hugo.yaml to use Hextra theme by adding the following:\nmodule: imports: - path: github.com/imfing/hextra Create your first content pages Create new content page for the home page and the documentation page:\nhugo new content/_index.md hugo new content/docs/_index.md Preview the site locally hugo server --buildDrafts --disableFastRender Voila, your new site preview is available at http://localhost:1313/.\nSetup Hextra as Git submodule Prerequisites Before starting, you need to have the following software installed:\nHugo (extended version) Git Steps Initialize a new Hugo site hugo new site my-site --format=yaml Add Hextra theme as a Git submodule git submodule add https://github.com/imfing/hextra.git themes/hextra Configure hugo.yaml to use Hextra theme by adding the following:\ntheme: hextra Create your first content pages Create new content page for the home page and the documentation page:\nhugo new content/_index.md hugo new content/docs/_index.md Preview the site locally hugo server --buildDrafts --disableFastRender Your new site preview is available at http://localhost:1313/.\nWhen using CI/CD for Hugo website deployment, it’s essential to ensure that the following command is executed before running the hugo command.\ngit submodule update --init Failure to run this command results in the theme folder not being populated with Hextra theme files, leading to a build failure."},"title":"Getting Started"},"/en/docs/guide/":{"data":{"":"Explore the following sections to learn how to use Hextra:\nOrganize Files Configuration Markdown Syntax Highlighting LaTeX Diagrams Shortcodes Deploy Site "},"title":"Guide"},"/en/docs/guide/_index.fa/":{"data":{"":"برای یادگیری نحوه استفاده از هگزترا، بخش‌های زیر را کاوش کنید:\nسازماندهی پرونده‌ها پیکربندی مارک‌داون برجسته‌کردن سینتکس LaTeX نمودارها کدهای کوتاه به‌کاراندازی سایت "},"title":"راهنما"},"/en/docs/guide/_index.zh-cn/":{"data":{"":"探索以下各节以学习如何使用 Hextra 编写内容：\n目录结构 配置 Markdown 代码高亮 LaTeX 公式 图表 短代码 "},"title":"指南"},"/en/docs/guide/configuration.fa/":{"data":{"":"Hugo پیکربندی خود را از hugo.yaml در ریشه سایت Hugo شما می‌خواند. پرونده پیکربندی جایی است که می‌توانید تمام جنبه‌های سایت خود را پیکربندی کنید. پرونده پیکربندی این سایت exampleSite/hugo.yaml را در گیت‌هاب بررسی کنید تا ایده‌ای جامع از تنظیمات موجود و بهترین شیوه‌ها بدست آورید.","سایر-موارد#سایر موارد":"Favicon برای سفارشی کردن favicon برای سایت خود، پرونده‌های آیکون را درون پوشه static قرار دهید تا faviconهای پیش‌فرض در تم جایگزین شود:\nstatic android-chrome-192x192.png android-chrome-512x512.png apple-touch-icon.png favicon-16x16.png favicon-32x32.png favicon-dark.svg favicon.ico favicon.svg site.webmanifest هر دو پرونده favicon.ico و favicon.svg را در پروژه خود قرار دهید، تا از نمایش صحیح faviconهای سایت خود مطمئن شوید.\nدر حالی که favicon.ico به طور کلی برای مرورگرهای قدیمی‌تر است، favicon.svg توسط مرورگرهای مدرن پشتیبانی می‌شود. faviconfavicon-dark.svg اختیاری را می‌توانید برای یک تجربه سفارشی در حالت تیره اضافه کرد. با خیال راحت از ابزارهایی مانند favicon.io یا favycon برای تولید این آیکون‌ها استفاده کنید.\nپیکربندی تم از تنظیمات theme برای پیکربندی حالت پیش‌فرض تم و دکمه جابه‌جایی استفاده کنید و به بازدیدکنندگان اجازه دهید بین حالت روشن یا تیره جابجا شوند.\nhugo.yamlparams: theme: # light | dark | system default: system displayToggle: true گزینه‌های theme.default:\nlight - همیشه از حالت روشن استفاده شود dark - همیشه از حالت تیره استفاده شود system - همگام‌سازی با تنظیمات سیستم‌عامل (پیش‌فرض) پارامتر theme.displayToggle به شما این امکان را می‌دهد که یک دکمه جابجایی برای تغییر حالت تم‌ها نمایش دهید. وقتی روی true تنظیم شود، بازدیدکنندگان می‌توانند بین حالت روشن یا تیره جابه‌جا شوند و تنظیمات پیش‌فرض را نادیده بگیرند.\nعرض صفحه عرض صفحه را می‌توان با پارامتر params.page.width در پرونده پیکربندی سفارشی کرد:\nhugo.yamlparams: page: # full (100%), wide (90rem), normal (1280px) width: wide سه گزینه در دسترس وجود دارد: full، wide و normal. به طور پیش‌فرض، عرض صفحه روی normal تنظیم شده است.\nبه طور مشابه، عرض نوار ناوبری و پاورقی را می‌توان با پارامترهای params.navbar.width و params.footer.width سفارشی کرد.\nفهرست جستجو جستجوی متن کامل توسط FlexSearch پیاده‌سازی شده و به طور پیش‌فرض فعال است. برای سفارشی کردن فهرست جستجو، پارامتر params.search.flexsearch.index را در پرونده پیکربندی تنظیم کنید:\nhugo.yamlparams: # Search search: enable: true type: flexsearch flexsearch: # index page by: content | summary | heading | title index: content گزینه‌های flexsearch.index:\ncontent - محتوای کامل صفحه (پیش‌فرض) summary - خلاصه صفحه، برای جزئیات بیشتر به خلاصه مطالب Hugo مراجعه کنید heading - سرتیترهای سطح ۱ و سطح ۲ title - فقط شامل عنوان صفحه است برای حذف یک صفحه از فهرست جستجو، excludeSearch: true را در قسمت بالای صفحه تنظیم کنید:\ncontent/docs/guide/configuration.md--- title: پیکربندی excludeSearch: true --- گوگل آنالیتیکس برای فعال کردن گوگل آنالیتیکس، پرچم services.googleAnalytics.ID را در hugo.yaml تنظیم کنید:\nhugo.yamlservices: googleAnalytics: ID: G-MEASUREMENT_ID ","ناوبری#ناوبری":"منو منوی سمت چپ بالا در قسمت menu.main در پرونده پیکربندی تعریف شده است:\nhugo.yamlmenu: main: - name: مستندات pageRef: /docs weight: 1 - name: وبلاگ pageRef: /blog weight: 2 - name: درباره ما pageRef: /about weight: 3 - name: جستجو weight: 4 params: type: search - name: گیت‌هاب weight: 5 url: \"https://github.com/imfing/hextra\" params: icon: github انواع مختلفی از آیتم‌های منو وجود دارد:\nپیوند به صفحه‌ای در سایت با pageRef - name: مستندات pageRef: /docs پیوند به یک نشانی اینترنتی با url - name: گیت‌هاب url: \"https://github.com\" نوار جستجو با type: search - name: جستجو params: type: search آیکون - name: گیت‌هاب params: icon: github این آیتم‌های منو را می‌توانید با تنظیم پارامتر weight مرتب کنید.\nآرم و عنوان برای تغییر آرم پیش‌فرض، hugo.yaml را ویرایش کنید و مسیر را به پرونده آرم خود در دایرکتوری static اضافه کنید. به صورت اختیاری، می‌توانید پیوندی را که کاربران هنگام کلیک کردن روی آرم شما به آن هدایت می‌شوند، تغییر دهید، همچنین عرض و ارتفاع آرم را به پیکسل تنظیم کنید.\nhugo.yamlparams: navbar: displayTitle: true displayLogo: true logo: path: images/logo.svg dark: images/logo-dark.svg link: / width: 40 height: 20 ","نوار-کناری#نوار کناری":"نوار کناری اصلی برای نوار کناری اصلی، به طور خودکار از ساختار دایرکتوری محتوا تولید می‌شود. برای جزئیات بیشتر به صفحه سازماندهی پرونده‌ها مراجعه کنید.\nبرای حذف یک صفحه از نوار کناری سمت راست، پارامترsidebar.exclude را در قسمت بالایی صفحه تنظیم کنید:\ncontent/docs/guide/configuration.md--- title: پیکربندی sidebar: exclude: true --- پیوندهای اضافی پیوندهای اضافی نوار کناری در زیر بخش menu.sidebar در پرونده پیکربندی تعریف شده است:\nhugo.yamlmenu: sidebar: - name: بیشتر params: type: separator weight: 1 - name: \"درباره ما\" pageRef: \"/about\" weight: 2 - name: \"مستندات هیوگو ↖\" url: \"https://gohugo.io/documentation/\" weight: 3 ","نوار-کناری-سمت-چپ#نوار کناری سمت چپ":"فهرست مطالب فهرست مطالب به طور خودکار از سرتیرهای موجود در پرونده محتوا تولید می‌شود. می‌توان آن را با تنظیم toc: false در قسمت بالایی صفحه غیرفعال کرد.\ncontent/docs/guide/configuration.md--- title: پیکربندی toc: false --- پیوند ویرایش صفحه برای پیکربندی پیوند ویرایش صفحه، می‌توانیم پارامتر params.editURL.base را در پرونده پیکربندی تنظیم کنیم:\nhugo.yamlparams: editURL: enable: true base: \"https://github.com/your-username/your-repo/edit/main\" پیوندهای ویرایش به طور خودکار برای هر صفحه براساس نشانی اینترنتی ارائه شده به عنوان دایرکتوری ریشه ایجاد می‌شود. اگر می‌خواهید پیوند ویرایش را برای یک صفحه خاص تنظیم کنید، می‌توانید پارامتر editURL را در قسمت بالای صفحه تنظیم کنید:\ncontent/docs/guide/configuration.md--- title: پیکربندی editURL: \"https://example.com/edit/this/page\" --- ","پاورقی#پاورقی":"کپی‌رایت برای تغییر متن کپی‌رایت نمایش داده شده در پاورقی وب‌سایت خود، باید پرونده‌ای به نام i18n/fa.yaml ایجاد کنید. در این پرونده متن کپی‌رایت جدید خود را مطابق شکل زیر مشخص کنید:\ni18n/fa.yamlcopyright: \"© ۲۰۲۴ متن شما در اینجا\" برای مرجع شما، یک مثال i18n/en.yaml را می‌توانید در مخزن گیت‌هاب پیدا کنید. علاوه بر این، می‌توانید از فرمت مارک‌داون در متن کپی‌رایت استفاده کنید."},"title":"پیکربندی"},"/en/docs/guide/configuration.zh-cn/":{"data":{"":"Hugo 从 Hugo 网站根目录下的 hugo.yaml 读取配置。 在配置文件中，您可以配置站点的所有选项。 你可以在 exampleSite/hugo.yaml 中找到此站点的配置文件作为开始。","footer#Footer":"版权声明 如需修改网站页脚中显示的版权文本，您需要创建一个名为“i18n/en.yaml”的文件。 在此文件中，填写新的版权文本，像这样：\ni18n/en.yamlcopyright: \"© 2024 YOUR TEXT HERE\" 你可以在 GitHub 存储库中找到示例 i18n/en.yaml 文件。另外，你可以在版权文本中使用 Markdown 格式。","侧边栏#侧边栏":"主侧边栏 主侧边栏是自动从 content 目录结构生成的。 有关更多详细信息，转至 目录结构。\n额外链接 侧边栏的额外链接在配置文件的 menu.sidebar 部分中配置：\nhugo.yamlmenu: sidebar: - name: More params: type: separator weight: 1 - name: \"About\" pageRef: \"/about\" weight: 2 - name: \"Hugo Docs ↗\" url: \"https://gohugo.io/documentation/\" weight: 3 ","其他#其他":"Favicon 如需自定义 favicon，请将图标文件放在 static 文件夹下以覆盖 主题中的默认 favicon：\nstatic android-chrome-192x192.png android-chrome-512x512.png apple-touch-icon.png favicon-16x16.png favicon-32x32.png favicon-dark.svg favicon.ico favicon.svg site.webmanifest 在您的项目中包含 favicon.ico 和 favicon.svg 文件，以确保网站的网站图标正确显示。\n虽然 favicon.ico 通常适用于较旧的浏览器，但 favicon.svg 受到现代浏览器的支持，所以更现代的做法是添加 favicon-dark.svg 以便在黑暗模式下提供较好的体验体验。\n请随意使用 favicon.io 或 favycon 等工具来生成这些图标。\n颜色主题配置 使用theme设置来配置默认主题模式和切换按钮，允许访问者在浅色或深色模式之间切换。\nhugo.yamlparams: theme: # light | dark | system default: system displayToggle: true theme.default 的可选项：\nlight - 仅使用浅色模式 dark - 仅使用神色模式 system - 跟随系统 theme.displayToggle 控制显示用于更改主题的切换按钮。 当设置为“true”时，访问者可以在浅色或深色模式之间切换，覆盖默认设置。\n页宽 页面的宽度可以通过配置文件中的params.page.width参数来调整：\nhugo.yamlparams: page: # full (100%), wide (90rem), normal (1280px) width: wide 有三个可选项：full, wide, and normal. 默认的页宽模式是 normal.\n同样的，导航栏和 footer 的宽度也可通过 params.navbar.width 和 params.footer.width 调整。\n搜索 默认情况下启用由 FlexSearch 提供全文搜索。 要自定义搜索索引，请在配置文件中设置 params.search.flexsearch.index ：\nhugo.yamlparams: # Search search: enable: true type: flexsearch flexsearch: # index page by: content | summary | heading | title index: content flexsearch.index 的可选项：\ncontent - 全内容搜索 summary - 概述 Hugo Content Summaries heading - 一级和二级标题 title - 仅搜索标题 要从搜索索引中排除页面，更改 front matter 中的 excludeSearch: true:\ncontent/docs/guide/configuration.md--- title: Configuration excludeSearch: true --- Google Analytics 要启用 Google Analytics，设置 services.googleAnalytics.ID:\nhugo.yamlservices: googleAnalytics: ID: G-MEASUREMENT_ID ","右侧边栏#右侧边栏":"目录 目录是根据内容文件中的标题自动生成的，可以在 front matter 设置 toc：false 来禁用它。\ncontent/docs/guide/configuration.md--- title: Configuration toc: false --- 编辑此页链接 要配置编辑此页链接，我们可以在配置文件中设置 params.editURL.base：\nhugo.yamlparams: editURL: base: \"https://github.com/your-username/your-repo/edit/main\" 将为每个页面自动生成编辑链接。 如需为特定页面设置编辑链接，可以在页面的 front matter 中设置 editURL：\ncontent/docs/guide/configuration.md--- title: Configuration editURL: \"https://example.com/edit/this/page\" --- ","导航栏#导航栏":"菜单 右上角的菜单在配置文件的 menu.main 中配置：\nhugo.yamlmenu: main: - name: Documentation pageRef: /docs weight: 1 - name: Blog pageRef: /blog weight: 2 - name: About pageRef: /about weight: 3 - name: Search weight: 4 params: type: search - name: GitHub weight: 5 url: \"https://github.com/imfing/hextra\" params: icon: github 有几种不同类型的菜单项：\nLink to a page in the site with pageRef - name: Documentation pageRef: /docs Link to an external URL with url - name: GitHub url: \"https://github.com\" Search bar with type: search - name: Search params: type: search Icon - name: GitHub params: icon: github 这些菜单项可以通过设置 weight 进行排序。"},"title":"配置文件"},"/en/docs/guide/configuration/":{"data":{"":"Hugo reads its configuration from hugo.yaml in the root of your Hugo site. The config file is where you can configure all aspects of your site. Check out the config file for this site exampleSite/hugo.yaml on GitHub to get a comprehensive idea of available settings and best practices.","footer#Footer":"Copyright To modify the copyright text displayed in your website’s footer, you’ll need to create a file named i18n/en.yaml. In this file, specify your new copyright text as shown below:\ni18n/en.yamlcopyright: \"© 2024 YOUR TEXT HERE\" For your reference, an example i18n/en.yaml file can be found in the GitHub repository. Additionally, you could use Markdown format in the copyright text.","navigation#Navigation":"Menu Top right menu is defined under the menu.main section in the config file:\nhugo.yamlmenu: main: - name: Documentation pageRef: /docs weight: 1 - name: Blog pageRef: /blog weight: 2 - name: About pageRef: /about weight: 3 - name: Search weight: 4 params: type: search - name: GitHub weight: 5 url: \"https://github.com/imfing/hextra\" params: icon: github There are different types of menu items:\nLink to a page in the site with pageRef - name: Documentation pageRef: /docs Link to an external URL with url - name: GitHub url: \"https://github.com\" Search bar with type: search - name: Search params: type: search Icon - name: GitHub params: icon: github These menu items can be sorted by setting the weight parameter.\nLogo and Title To modify the default logo, edit hugo.yaml and add the path to your logo file under static directory. Optionally, you can change the link that users are redirected to when clicking on your logo, as well as set the width \u0026 height of the logo in pixels.\nhugo.yamlparams: navbar: displayTitle: true displayLogo: true logo: path: images/logo.svg dark: images/logo-dark.svg link: / width: 40 height: 20 ","others#Others":"Favicon To customize the favicon for your site, place icon files under the static folder to override the default favicons from the theme:\nstatic android-chrome-192x192.png android-chrome-512x512.png apple-touch-icon.png favicon-16x16.png favicon-32x32.png favicon-dark.svg favicon.ico favicon.svg site.webmanifest Include both favicon.ico and favicon.svg files in your project to ensure your site’s favicons display correctly.\nWhile favicon.ico is generally for older browsers, favicon.svg is supported by modern ones. The optional favicon-dark.svg can be included for a tailored experience in dark mode. Feel free to use tools like favicon.io or favycon to generate these icons.\nTheme Configuration Use the theme setting to configure the default theme mode and toggle button, allowing visitors to switch between light or dark mode.\nhugo.yamlparams: theme: # light | dark | system default: system displayToggle: true Options for theme.default:\nlight - always use light mode dark - always use dark mode system - sync with the operating system setting (default) The theme.displayToggle parameter allows you to display a toggle button for changing themes. When set to true, visitors can switch between light or dark mode, overriding the default setting.\nPage Width The width of the page can be customized by the params.page.width parameter in the config file:\nhugo.yamlparams: page: # full (100%), wide (90rem), normal (1280px) width: wide There are three available options: full, wide, and normal. By default, the page width is set to normal.\nSimilarly, the width of the navbar and footer can be customized by the params.navbar.width and params.footer.width parameters.\nSearch Index Full-text search powered by FlexSearch is enabled by default. To customize the search index, set the params.search.flexsearch.index parameter in the config file:\nhugo.yamlparams: # Search search: enable: true type: flexsearch flexsearch: # index page by: content | summary | heading | title index: content Options for flexsearch.index:\ncontent - full content of the page (default) summary - summary of the page, see Hugo Content Summaries for more details heading - level 1 and level 2 headings title - only include the page title To exclude a page from the search index, set the excludeSearch: true in the front matter of the page:\ncontent/docs/guide/configuration.md--- title: Configuration excludeSearch: true --- Google Analytics To enable Google Analytics, set services.googleAnalytics.ID flag in hugo.yaml:\nhugo.yamlservices: googleAnalytics: ID: G-MEASUREMENT_ID ","right-sidebar#Right Sidebar":"Table of Contents Table of contents is automatically generated from the headings in the content file. It can be disabled by setting toc: false in the front matter of the page.\ncontent/docs/guide/configuration.md--- title: Configuration toc: false --- Page Edit Link To configure the page edit link, we can set the params.editURL.base parameter in the config file:\nhugo.yamlparams: editURL: enable: true base: \"https://github.com/your-username/your-repo/edit/main\" The edit links will be automatically generated for each page based on the provided url as root directory. If you want to set edit link for a specific page, you can set the editURL parameter in the front matter of the page:\ncontent/docs/guide/configuration.md--- title: Configuration editURL: \"https://example.com/edit/this/page\" --- ","sidebar#Sidebar":"Main Sidebar For the main sidebar, it is automatically generated from the structure of the content directory. See the Organize Files page for more details.\nTo exclude a single page from the left sidebar, set the sidebar.exclude parameter in the front matter of the page:\ncontent/docs/guide/configuration.md--- title: Configuration sidebar: exclude: true --- Extra Links Sidebar extra links are defined under the menu.sidebar section in the config file:\nhugo.yamlmenu: sidebar: - name: More params: type: separator weight: 1 - name: \"About\" pageRef: \"/about\" weight: 2 - name: \"Hugo Docs ↗\" url: \"https://gohugo.io/documentation/\" weight: 3 "},"title":"Configuration"},"/en/docs/guide/deploy-site.fa/":{"data":{"":"Hugo وب‌سایت‌های استاتیک را ایجاد می‌کند و امکان گزینه‌های میزبانی انعطاف‌پذیر را فراهم می‌کند. این صفحه راهنماهایی برای به‌کاراندازی سایت هگزترا شما در پلتفرم‌های مختلف ارائه می‌کند.","netlify#Netlify":" کد خود را به مخزن Git خود (گیت‌هاب، گیت‌لب و غیره) ارسال کنید. وارد کردن پروژه به Netlify اگر از [hextra-starter-template][hextra-starter-template] استفاده نمی‌کنید، موارد زیر را به صورت دستی پیکربندی کنید: دستور Build را روی hugo --gc --minify پیکربندی کنید دایرکتوری Publish را برای public مشخص کنید HUGO_VERSION متغیر محیط استقرار را اضافه کنید و روی 0.119.0 تنظیم کنید استقرار! برای جزئیات بیشتر Hugo را در Netlify بررسی کنید.","vercel#Vercel":" کد خود را به مخزن Git خود (گیت‌هاب، گیت‌لب و غیره) ارسال کنید. به پیشخوان Vercel بروید و پروژه Hugo خود را وارد کنید پروژه را پیکربندی کنید، Hugo را به‌ عنوان چارچوب Preset انتخاب کنید دستور Build و Install را لغو کنید: دستور Build را روی hugo --gc --minify تنظیم کنید دستور Install را روی yum install golang تنظیم کنید ","کلودفلر-pages#کلودفلر Pages":" کد منبع سایت خود را در یک مخزن Git (به عنوان مثال گیت‌هاب) قرار دهید وارد پیشخوان کلودفلر شوید و حساب خود را انتخاب کنید در صفحه اصلی حساب‌کاربری، Workers \u0026 Pages \u003e Create application \u003e Pages \u003e Connect to Git را انتخاب کنید مخزن را انتخاب کنید و در بخش Set up builds and Deployments اطلاعات زیر را وارد کنید: Configuration Value Production branch main Build command hugo --gc --minify Build directory public برای جزئیات بیشتر، بررسی کنید:\nیک سایت هیوگو راه‌اندازی کنید.. پشتیبانی زبان و ابزار.. ","گیتهاب-pages#گیت‌هاب Pages":"گیت‌هاب Pages روشی توصیه شده برای به‌کاراندازی و میزبانی وب‌سایت شما به صورت رایگان است.\nاگر سایت را با استفاده از hextra-starter-template راه‌اندازی سریع پیاده‌سازی می‌کنید، گردش کار گیت‌هاب Actions را به صورت خارج از جعبه ارائه کرده‌ایم که به‌کاراندازی خودکار در گیت‌هاب Pages به شما کمک می‌کند.\nدر تنظیمات مخزن خود، Pages \u003e Build and deployment \u003e Source را روی GitHub Actions تنظیم کنید: به‌طور پیش‌فرض، گردش کار گیت‌هاب Actions بالا .github/workflows/pages.yaml فرض می‌کند که سایت در حال به‌کاراندازی در https://\u003cUSERNAME\u003e.github.io/\u003cREPO\u003e/ است.\nاگر در حال استفاده از https://\u003cUSERNAME\u003e.github.io/ هستید، سپس --baseURL را تغییر دهید:\n.github/workflows/pages.yaml 54 55 56 57 run: | hugo \\ --gc --minify \\ --baseURL \"https://${{ github.repository_owner }}.github.io/\" اگر می‌خواهید روی دامنه شخصی خود استقرار پیدا کند، لطفا مقدار --baseURL را بر این اساس تغییر دهید."},"title":"به‌کاراندازی سایت"},"/en/docs/guide/deploy-site.zh-cn/":{"data":{"":"Hugo 生成静态站点，允许多种托管方式，你可以自由选择 本页将给出部署你的 Hextra 站点的方法","cloudflare-pages#Cloudflare Pages":" 将您的网站托管在 Git 存储库（例如 GitHub） 登录到 Cloudflare dashboard 并选择你的账户 转至在账户主页面中 Workers \u0026 Pages \u003e Create application \u003e Pages \u003e Connect to Git 选择你的仓库 Set up builds and deployments 提供以下信息： Configuration Value Production branch main Build command hugo --gc --minify Build directory public 如需了解更多内容，见：\nDeploy a Hugo site. Language support and tools. ","github-pages#GitHub Pages":"GitHub Pages 是免费部署和托管网站的推荐方法\n如果您使用以下方式引导该网站 hextra-starter-template, 它提供了开箱即用的 GitHub Actions 工作流程，有助于自动部署到 GitHub Pages\n在仓库设置中将 Pages \u003e Build and deployment \u003e Source 调整为 GitHub Actions: 默认情况下，上述 GitHub Actions 工作流程 .github/workflows/pages.yaml 假定站点部署到 https://\u003cUSERNAME\u003e.github.io/\u003cREPO\u003e/\n如需部署到 https://\u003cUSERNAME\u003e.github.io/ 修改参数 --baseURL:\n.github/workflows/pages.yaml 54 55 56 57 run: | hugo \\ --gc --minify \\ --baseURL \"https://${{ github.repository_owner }}.github.io/\" 如需部署到自己的域，请对应修改 --baseURL","netlify#Netlify":" 将代码推送到 Git 存储库 (如 GitHub, GitLab) 导入项目 如果您不使用[hextra-starter-template][hextra-starter-template], 手动配置以下内容： C 将构建命令配置为 hugo --gc --minify 指定发布目录为 public 添加环境变量 HUGO_VERSION 并设定为 0.119.0 部署 转至 Hugo on Netlify 获得更多信息","vercel#Vercel":" 将代码推送到 Git 存储库（GitHub、GitLab 等） 转至 Vercel Dashboard 并导入你的 Hugo 项目 配置项目，选择 Hugo 作为 Framework Preset 覆盖构建命令和安装命令： 设置构建命令为 hugo --gc --minify 将安装命令设置为 yum install golang "},"title":"部署站点"},"/en/docs/guide/deploy-site/":{"data":{"":"Hugo generates static websites, allowing for flexible hosting options. This page provides guides for deploying your Hextra site on various platforms.","cloudflare-pages#Cloudflare Pages":" Put your site source code in a Git repository (e.g. GitHub) Log in to the Cloudflare dashboard and select your account In Account Home, select Workers \u0026 Pages \u003e Create application \u003e Pages \u003e Connect to Git Select the repository, and in the Set up builds and deployments section, provide the following information: Configuration Value Production branch main Build command hugo --gc --minify Build directory public For more details, check out:\nDeploy a Hugo site. Language support and tools. ","github-pages#GitHub Pages":"GitHub Pages is the recommended way to deploy and host your website for free.\nIf you bootstrap the site using hextra-starter-template, it has provided GitHub Actions workflow out-of-the-box that helps automatically deploy to GitHub Pages.\nIn your repository settings, set the Pages \u003e Build and deployment \u003e Source to GitHub Actions: By default, the above GitHub Actions workflow .github/workflows/pages.yaml assumes that the site is deploying to https://\u003cUSERNAME\u003e.github.io/\u003cREPO\u003e/.\nIf you are deploying to https://\u003cUSERNAME\u003e.github.io/ then modify the --baseURL:\n.github/workflows/pages.yaml 54 55 56 57 run: | hugo \\ --gc --minify \\ --baseURL \"https://${{ github.repository_owner }}.github.io/\" If you are deploying to your own domain, please change the --baseURL value accordingly.","netlify#Netlify":" Push your code to your Git repository (GitHub, GitLab, etc.) Import the project to Netlify If you are not using [hextra-starter-template][hextra-starter-template], configure the following manually: Configure the Build command to hugo --gc --minify Specify the Publish directory to public Add Environment variable HUGO_VERSION and set to 0.119.0 Deploy! Check Hugo on Netlify for more details.","vercel#Vercel":" Push your code to your Git repository (GitHub, GitLab, etc.) Go to Vercel Dashboard and import your Hugo project Configure the project, select Hugo as Framework Preset Override the Build Command and Install command: Set Build Command to hugo --gc --minify Set Install Command to yum install golang "},"title":"Deploy Site"},"/en/docs/guide/diagrams.fa/":{"data":{"":"در حال حاضر، هگزترا از Mermaid برای نمودارها پشتیبانی می‌کند.","mermaid#Mermaid":"Mermaid یک ابزار نمودار و نمودار مبتنی بر جاوااسکریپت است که تعاریف متنی الهام گرفته از مارک‌داون را دریافت می‌کند و نمودارها را به صورت پویا در مرورگر ایجاد می‌کند. به عنوان مثال، Mermaid می‌تواند نمودارهای فلوچارت، نمودارهای توالی، نمودارهای دایره‌ای و موارد دیگر را رندر کند.\nاستفاده از Mermaid در هگزترا به سادگی نوشتن یک بلوک کد با مجموعه زبان mermaid است:\n```mermaid graph TD; A--\u003eB; A--\u003eC; B--\u003eD; C--\u003eD; ``` به صورت زیر رندر خواهد شد:\ngraph TD; A--\u003eB; A--\u003eC; B--\u003eD; C--\u003eD;نمودار توالی:\nsequenceDiagram participant Alice participant Bob Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003e\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughts prevail! John--\u003e\u003eAlice: Great! John-\u003e\u003eBob: How about you? Bob--\u003e\u003eJohn: Jolly good!برای اطلاعات بیشتر، لطفا به مستندات Mermaid مراجعه کنید."},"title":"نمودارها"},"/en/docs/guide/diagrams.zh-cn/":{"data":{"":"目前，Hextra 支持 Mermaid 的图表。","mermaid#Mermaid":"Mermaid 是一个基于 JavaScript 的图表绘制工具，它的文本定义和 Markdown 类似，可在浏览器中动态创建图表。例如：流程图、序列图、饼图等。\n在 Hextra 中使用 Mermaid 就像使用代码块一样简单：\n```mermaid graph TD; A--\u003eB; A--\u003eC; B--\u003eD; C--\u003eD; ``` 将呈现为：\ngraph TD; A--\u003eB; A--\u003eC; B--\u003eD; C--\u003eD;Sequence diagram：\nsequenceDiagram participant Alice participant Bob Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003e\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughts prevail! John--\u003e\u003eAlice: Great! John-\u003e\u003eBob: How about you? Bob--\u003e\u003eJohn: Jolly good!如需获取更多信息，转至 Mermaid Documentation。"},"title":"图表"},"/en/docs/guide/diagrams/":{"data":{"":"Currently, Hextra supports Mermaid for diagrams.","mermaid#Mermaid":"Mermaid is a JavaScript based diagramming and charting tool that takes Markdown-inspired text definitions and creates diagrams dynamically in the browser. For example, Mermaid can render flow charts, sequence diagrams, pie charts and more.\nUsing Mermaid in Hextra is as simple as writing a code block with language set mermaid:\n```mermaid graph TD; A--\u003eB; A--\u003eC; B--\u003eD; C--\u003eD; ``` will be rendered as:\ngraph TD; A--\u003eB; A--\u003eC; B--\u003eD; C--\u003eD;Sequence diagram:\nsequenceDiagram participant Alice participant Bob Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003e\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughts prevail! John--\u003e\u003eAlice: Great! John-\u003e\u003eBob: How about you? Bob--\u003e\u003eJohn: Jolly good!For more information, please refer to Mermaid Documentation."},"title":"Diagrams"},"/en/docs/guide/latex.fa/":{"data":{"":"$\\KaTeX$ برای رندر کردن عبارت‌های ریاضی LaTeX استفاده می‌شود. می‌توان آن را در هر صفحه با تنظیم math روی true در قسمت بالای صفحه فعال کرد.\nMarkdown--- title: \"صفحه من با LaTeX\" math: true --- وقتی فعال باشد، اسکریپت‌ها، شیوه‌نامه‌ها و فونت‌های KaTeX به طور خودکار در سایت شما قرار می‌گیرند. می‌توانید از عبارت‌های ریاضی LaTeX در محتوای مارک‌داون خود استفاده کنید.","توابع-پشتیبانی-شده#توابع پشتیبانی شده":"برای مشاهده فهرست توابع پشتیبانی شده، به توابع پشتیبانی شده KaTeX مراجعه کنید.","شیمی#شیمی":"عبارت‌های شیمی از طریق افزونه mhchem پشتیبانی می‌شوند.\nدرون‌خطی: $\\ce{H2O}$ آب است.\nپاراگراف جداگانه:\npage.md$$\\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-}$$ $$\\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-}$$","مثال#مثال":"هر دو عبارت‌های ریاضی درون‌خطی و پاراگراف جداگانه LaTeX در محتوای مارک‌داون پشتیبانی می‌شوند.\nدرون‌خطی page.mdاین $\\sigma(z) = \\frac{1}{1 + e^{-z}}$ درون‌خطی است. این $\\sigma(z) = \\frac{1}{1 + e^{-z}}$ درون‌خطی است.\nپاراگراف جداگانه page.md$$F(\\omega) = \\int_{-\\infty}^{\\infty} f(t) e^{-j\\omega t} \\, dt$$ به صورت زیر رندر خواهد شد:\n$$F(\\omega) = \\int_{-\\infty}^{\\infty} f(t) e^{-j\\omega t} , dt$$"},"title":"LaTeX"},"/en/docs/guide/latex.zh-cn/":{"data":{"":"$\\KaTeX$ 用于呈现 LaTeX 数学表达式。可在 frontmatter 将 math 设置为 true 来启用。\nMarkdown--- title: \"My Page with LaTeX\" math: true --- 启用后，KaTeX 中的脚本，样式表和字体将自动包含在你的网站中。这样就可以在 Markdown 内容中使用 LaTeX 数学表达式。","化学表达式#化学表达式":"通过 mhchem 支持化学表达式。\n行内：$\\ce{H2O}$ 是水。\n独立段落：\npage.md$$\\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-}$$ $$\\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-}$$","支持的功能#支持的功能":"有关支持的符号列表，转至 KaTeX 支持的公式。","示例#示例":"Markdown 内容支持行内和独立段落的 LaTeX 数学表达式。\n行内 page.mdThis $\\sigma(z) = \\frac{1}{1 + e^{-z}}$ is inline. This $\\sigma(z) = \\frac{1}{1 + e^{-z}}$ is inline.\n独立段落 page.md$$F(\\omega) = \\int_{-\\infty}^{\\infty} f(t) e^{-j\\omega t} \\, dt$$ 将被渲染为：\n$$F(\\omega) = \\int_{-\\infty}^{\\infty} f(t) e^{-j\\omega t} , dt$$"},"title":"LaTeX 公式"},"/en/docs/guide/latex/":{"data":{"":"$\\KaTeX$ is used for rendering LaTeX math expressions. It can be enabled per page by setting math to true in the page front matter.\nMarkdown--- title: \"My Page with LaTeX\" math: true --- When enabled, the scripts, stylesheets and fonts from KaTeX will be included automatically in your site. You can start using LaTeX math expressions in your Markdown content.","chemistry#Chemistry":"Chemistry expressions are supported via mhchem extension.\nInline: $\\ce{H2O}$ is water.\nSeparate paragraph:\npage.md$$\\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-}$$ $$\\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-}$$","example#Example":"Both inline and separate paragraph LaTeX math expressions are supported in the Markdown content.\nInline page.mdThis $\\sigma(z) = \\frac{1}{1 + e^{-z}}$ is inline. This $\\sigma(z) = \\frac{1}{1 + e^{-z}}$ is inline.\nSeparate Paragraph page.md$$F(\\omega) = \\int_{-\\infty}^{\\infty} f(t) e^{-j\\omega t} \\, dt$$ will be rendered as:\n$$F(\\omega) = \\int_{-\\infty}^{\\infty} f(t) e^{-j\\omega t} , dt$$","supported-functions#Supported Functions":"For a list of supported functions, see KaTeX supported functions."},"title":"LaTeX"},"/en/docs/guide/markdown.fa/":{"data":{"":"Hugo از سینتکس مارک‌داون برای قالب‌بندی متن، ایجاد فهرست و موارد دیگر پشتیبانی می‌کند. این صفحه برخی از رایج‌ترین نمونه‌های سینتکس مارک‌داون را به شما نشان می‌دهد.","مثالهای-مارکداون#مثال‌های مارک‌داون":"ظاهر طراحی دادن به متن سبک سینتکس مثال خروجی توپر **متن توپر** **متن توپر** متن توپر کج *متن کج* *متن کج* متن کج خط خورده ~~متن خط خورده~~ ~~متن خط خورده~~ متن خط خورده پایین‌نویس \u003csub\u003e\u003c/sub\u003e این یک متن \u003csub\u003eپایین‌نویس\u003c/sub\u003e است این یک متن پایین‌نویس است بالانویس \u003csup\u003e\u003c/sup\u003e این یک متن \u003csup\u003eبالانویس\u003c/sup\u003e است این یک متن بالانویس است بلوک نقل‌قول بلوک نقل‌قول با ذکر منبع\nبا اشتراک‌گذاری حافظه ارتباط برقرار نکنید، حافظه را با برقراری ارتباط به اشتراک بگذارید. — راب پایک1\nجدول‌ها جدول‌ها بخشی از مشخصات اصلی مارک‌داون نیستند، اما Hugo از آنها در خارج از جعبه پشتیبانی می‌کند.\nنام سن گودرز ۳۰ آصف ۳۴ مارک‌داون درون‌خطی درون جدول‌ها کج توپر کد کج توپر کد بلوک‌های کد برجسته‌کردن سینتکس فهرست‌ها فهرست مرتب‌شده اولین آیتم دومین آیتم سومین آیتم فهرست مرتب‌نشده فهرست آیتم یک آیتم دیگه و یک آیتم دیگه فهرست تو در تو میوه سیب پرتقال موز لبنیات شیر پنیر عکس‌ها با توضیحات:\nیک چشم‌انداز Unsplash نقل‌قول بالا گزیده‌ای از سخنرانی راب پایک در Gopherfest، در تاریخ ۲۷ آبان ۱۳۹۴ است. ↩︎","منابع-یادگیری#منابع یادگیری":" راهنمای مارک‌داون برگه تقلب مارک‌داون آموزش مارک‌داون مرجع مارک‌داون ","پیکربندی#پیکربندی":"Hugo از Goldmark برای تجزیه مارک‌داون استفاده می‌کند. رندر مارک‌داون را می‌توان در hugo.yaml تحت markup.goldmark پیکربندی کنید. در زیر پیکربندی پیش‌فرض هگزترا را می‌توانید ببینید:\nhugo.yamlmarkup: goldmark: renderer: unsafe: true highlight: noClasses: false برای گزینه‌های پیکربندی بیشتر، به مستندات Hugo در پیکربندی نشانه‌گذاری مراجعه کنید."},"title":"مارک‌داون"},"/en/docs/guide/markdown.zh-cn/":{"data":{"":"Hugo 支持 Markdown 来书写内容，创建列表等。本页将向你展示一些最常见的 Markdown 语法示例。","markdown-示例#Markdown 示例":"文本样式 Style Syntax Example Output Bold **bold text** **bold text** bold text Italic *italicized text* `italicized text italicized text Strikethrough ~~strikethrough text~~ ~~strikethrough text~~ strikethrough text Subscript \u003csub\u003e\u003c/sub\u003e This is a \u003csub\u003esubscript\u003c/sub\u003e text This is a subscript text Superscript \u003csup\u003e\u003c/sup\u003e This is a \u003csup\u003esuperscript\u003c/sup\u003e text This is a superscript text 引用 带角标的块引用：\nDon’t communicate by sharing memory, share memory by communicating. — Rob Pike1\n表格 表格并非核心 Markdown 规范，但 Hugo 支持开箱即用的表格：\nName Age Bob 27 Alice 23 Markdown 表格中的内联 Italics Bold Code italics bold code 代码块 Syntax Highlighting 列表 有序列表 First item Second item Third item 无序列表 List item Another item And another item 嵌套列表 Fruit Apple Orange Banana Dairy Milk Cheese 图片 带有标题：\nUnsplash Landscape The above quote is excerpted from Rob Pike’s talk during Gopherfest, November 18, 2015. ↩︎","参考资料#参考资料":" Markdown Guide Markdown Cheatsheet Markdown Tutorial Markdown Reference ","配置#配置":"Hugo 使用 Goldmark 解析 Markdown。 Markdown 渲染可以在 hugo.yaml 中的 markup.goldmark 中配置。以下是Hextra的默认配置：\nhugo.yamlmarkup: goldmark: renderer: unsafe: true highlight: noClasses: false 如需了解更多选项，转至 Configure Markup。"},"title":"Markdown"},"/en/docs/guide/markdown/":{"data":{"":"Hugo supports Markdown syntax for formatting text, creating lists, and more. This page will show you some of the most common Markdown syntax examples.","configuration#Configuration":"Hugo uses Goldmark for Markdown parsing. Markdown rendering can be configured in hugo.yaml under markup.goldmark. Below is the default configuration for Hextra:\nhugo.yamlmarkup: goldmark: renderer: unsafe: true highlight: noClasses: false For more configuration options, see Hugo documentation on Configure Markup.","learning-resources#Learning Resources":" Markdown Guide Markdown Cheatsheet Markdown Tutorial Markdown Reference ","markdown-examples#Markdown Examples":"Styling Text Style Syntax Example Output Bold **bold text** **bold text** bold text Italic *italicized text* *italicized text* italicized text Strikethrough ~~strikethrough text~~ ~~strikethrough text~~ strikethrough text Subscript \u003csub\u003e\u003c/sub\u003e This is a \u003csub\u003esubscript\u003c/sub\u003e text This is a subscript text Superscript \u003csup\u003e\u003c/sup\u003e This is a \u003csup\u003esuperscript\u003c/sup\u003e text This is a superscript text Blockquotes Blockquote with attribution\nDon’t communicate by sharing memory, share memory by communicating. — Rob Pike1\nTables Tables aren’t part of the core Markdown spec, but Hugo supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code Code Blocks Syntax Highlighting Lists Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Images With caption:\nUnsplash Landscape The above quote is excerpted from Rob Pike’s talk during Gopherfest, November 18, 2015. ↩︎"},"title":"Markdown"},"/en/docs/guide/organize-files.fa/":{"data":{"":"","افزودن-تصاویر#افزودن تصاویر":"برای افزودن تصاویر، ساده‌ترین راه این است که پرونده‌های عکس‌ها را در همان دایرکتوری پرونده مارک‌داون قرار دهید. برای مثال، یک پرونده عکس image.png را در کنار پرونده my-page.md اضافه کنید:\ncontent docs my-page.md image.png سپس، می‌توانید از سینتکس مارک‌داون زیر برای افزودن عکس به محتوا استفاده کنید:\ncontent/docs/my-page.md![](image.png) همچنین می‌توانید از ویژگی بسته‌های صفحه Hugo برای سازماندهی پرونده‌های عکس‌ها همراه با پرونده مارک‌داون استفاده کنید. برای رسیدن به این هدف، پرونده my-page.md را به یک دایرکتوری my-page تبدیل کنید و محتوا را در پرونده‌ای به نام index.md قرار دهید و پرونده‌های عکس‌ها را در دایرکتوری my-page قرار دهید:\ncontent docs my-page index.md image.png content/docs/my-page/index.md![](image.png) همچنین می‌توانید پرونده‌های عکس‌ها را در دایرکتوری static قرار دهید که عکس‌ها را برای همه صفحات در دسترس قرار می‌دهد:\nstatic images image.png content docs my-page.md توجه داشته باشید که مسیر عکس با یک اسلش / شروع می‌شود و نسبت به دایرکتوری استاتیک است:\ncontent/docs/my-page.md![](/images/image.png) ","ساختار-دایرکتوری#ساختار دایرکتوری":"به طور پیش‌فرض، Hugo پرونده‌های مارک‌داون را در فهرست content جستجو می‌کند و ساختار فهرست، ساختار خروجی نهایی وب‌سایت شما را تعیین می‌کند. همین سایت را به عنوان مثال در نظر بگیرید:\ncontent _index.md docs _index.md getting-started.md guide _index.md organize-files.md blog _index.md post-1.md هر یک از پرونده‌های _index.md صفحه اصلی هر بخش هستند که برای هر بخش مجزا است. سایر پرونده‌های مارک‌داون صفحه‌های معمولی دیگه‌ای هستند.\ncontent ├── _index.md // \u003c- / ├── docs │ ├── _index.md // \u003c- /docs/ │ ├── getting-started.md // \u003c- /docs/getting-started/ │ └── guide │ ├── _index.md // \u003c- /docs/guide/ │ └── organize-files.md // \u003c- /docs/guide/organize-files/ └── blog ├── _index.md // \u003c- /blog/ └── post-1.md // \u003c- /blog/post-1/ ","طرحبندیها#طرح‌بندی‌ها":"هگزترا سه طرح‌بندی برای انواع مختلف محتوا ارائه می‌کند:\nطرح‌بندی دایرکتوری ویژگی‌ها docs content/docs/ ایده‌آل برای مستندات ساختار یافته، مانند این بخش. blog content/blog/ برای نوشته‌های وبلاگ، با هر فهرست‌بندی و هم نمایش جزئیات مقاله. default همه دایرکتوری‌های دیگر مشاهده مقاله تک صفحه‌ای بدون نوار کناری. برای سفارشی کردن یک بخش برای منعکس کردن رفتار یک طرح داخلی، نوع طرح‌بندی مورد نظر را در قسمت بالایی قسمت _index.md` مشخص کنید.\ncontent/my-docs/_index.md--- title: مستندات من cascade: type: docs --- پیکربندی مثال بالا تضمین می‌کند که پرونده‌های محتوای در داخل content/my-docs/ به‌طور پیش‌فرض به عنوان مستندات (نوع docs) مورد استفاده قرار می‌گیرند.","ناوبری-نوار-کناری#ناوبری نوار کناری":"ناوبری نوار کناری به طور خودکار براساس حروف الفبا ایجاد می‌شود. برای پیکربندی دستی ترتیب نوار کناری، می‌توانید از پارامتر weight در قسمت بالایی پرونده‌های مارک‌داون استفاده کنید.\ncontent/docs/guide/_index.md--- title: راهنما weight: 2 --- ℹ️ توصیه می‌کنیم نوار کناری خیلی عمیق نباشد. اگر محتوای زیادی دارید، آنها را به چند بخش تقسیم کنید. ","پیکربندی-دایرکتوری-محتوا#پیکربندی دایرکتوری محتوا":"به طور پیش‌فرض، دایرکتوری ریشه content/ توسط Hugo برای ساخت سایت استفاده می‌شود. اگر نیاز به استفاده از دایرکتوری متفاوتی برای محتوا دارید، برای مثال docs/، این کار را می‌توانید با تنظیم پارامتر contentDir در پیکربندی سایت hugo.yaml انجام دهید."},"title":"سازماندهی پرونده‌ها"},"/en/docs/guide/organize-files.zh-cn/":{"data":{"":"","侧边栏导航#侧边栏导航":"侧边栏导航是根据内容组织的字母顺序自动生成的。要手动配置侧边栏顺序，可以在 Markdown 文件的 frontmatter 中使用 weight 配置。\ncontent/docs/guide/_index.md--- title: Guide weight: 2 --- ℹ️ 建议侧边栏不要太深。如果内容太多，请考虑 将它们分成多个部分。 ","目录结构#目录结构":"默认情况下，Hugo 在 context 目录中搜索 Markdown 文件，目录的结构决定了网站的最终输出结构。 以示例网站为例：\ncontent _index.md docs _index.md getting-started.md guide _index.md organize-files.md blog _index.md post-1.md 每个 _index.md 文件都是相应部分的索引页，其他 Markdown 文件则是常规页面。\ncontent ├── _index.md // \u003c- / ├── docs │ ├── _index.md // \u003c- /docs/ │ ├── getting-started.md // \u003c- /docs/getting-started/ │ └── guide │ ├── _index.md // \u003c- /docs/guide/ │ └── organize-files.md // \u003c- /docs/guide/organize-files/ └── blog ├── _index.md // \u003c- /blog/ └── post-1.md // \u003c- /blog/post-1/ ","配置内容目录#配置内容目录":"如果需要为的内容使用不同的目录，可以在站点配置文件中设置 contentDir 来实现。"},"title":"目录结构"},"/en/docs/guide/organize-files/":{"data":{"":"","add-images#Add Images":"To add images, the easiest way is to put the image files in the same directory as the Markdown file. For example, add an image file image.png alongside the my-page.md file:\ncontent docs my-page.md image.png Then, we can use the following Markdown syntax to add the image to the content:\ncontent/docs/my-page.md![](image.png) We can also utilize the page bundles feature of Hugo to organize the image files together with the Markdown file. To achieve that, turn the my-page.md file into a directory my-page and put the content into a file named index.md, and put the image files inside the my-page directory:\ncontent docs my-page index.md image.png content/docs/my-page/index.md![](image.png) Alternatively, we can also put the image files in the static directory, which will make the images available for all pages:\nstatic images image.png content docs my-page.md Note that the image path begins with a slash / and is relative to the static directory:\ncontent/docs/my-page.md![](/images/image.png) ","breadcrumb-navigation#Breadcrumb Navigation":"Breadcrumbs are auto-generated based on the directory structure of /content.\nFor example, consider the file structure demonstrated above. Given that structure, the breadcrumbs atop the page at /docs/guide/organize-files/ would appear automatically as follows:\nDocumentation \u003e Guide \u003e Organize Files Customizing Breadcrumb Link Titles By default, each breadcrumb link is generated based on that page’s title parameter. You can customize this by specifying a linkTitle.\nFor example, if instead of Organize Files we wanted the breadcrumb to be Foo Bar:\ncontent/docs/guide/organize-files.md--- linkTitle: Foo Bar title: Organize Files --- This would now generate the following breadcrumbs:\nDocumentation \u003e Guide \u003e Foo Bar Hiding Breadcrumbs You can hide breadcrumbs completely from a page by specfying breadcrumbs: false in its front matter:\ncontent/docs/guide/organize-files.md--- breadcrumbs: false title: Organize Files --- ","configure-content-directory#Configure Content Directory":"By default, the root content/ directory is used by Hugo to build the site. If you need to use a different directory for content, for example docs/, this can be done by setting the contentDir parameter in the site configuration hugo.yaml.","directory-structure#Directory Structure":"By default, Hugo searches for Markdown files in the content directory, and the structure of the directory determines the final output structure of your website. Take this site as an example:\ncontent _index.md docs _index.md getting-started.md guide _index.md organize-files.md blog _index.md post-1.md Each of the _index.md files is the index page for the corresponding section. The other Markdown files are regular pages.\ncontent ├── _index.md // \u003c- / ├── docs │ ├── _index.md // \u003c- /docs/ │ ├── getting-started.md // \u003c- /docs/getting-started/ │ └── guide │ ├── _index.md // \u003c- /docs/guide/ │ └── organize-files.md // \u003c- /docs/guide/organize-files/ └── blog ├── _index.md // \u003c- /blog/ └── post-1.md // \u003c- /blog/post-1/ ","layouts#Layouts":"Hextra offers three layouts for different content types:\nLayout Directory Features docs content/docs/ Ideal for structured documentation, same as this section. blog content/blog/ For blog postings, with both listing and detailed article views. default All other directories Single-page article view without sidebar. To customize a section to mirror the behavior of a built-in layout, specify the desired type in the front matter of the section’s _index.md.\ncontent/my-docs/_index.md--- title: My Docs cascade: type: docs --- The above example configuration ensures that the content files inside content/my-docs/ will be treated as documentation (docs type) by default.","sidebar-navigation#Sidebar Navigation":"The sidebar navigation is generated automatically based on the content organization alphabetically. To manually configure the sidebar order, we can use the weight parameter in the front matter of the Markdown files.\ncontent/docs/guide/_index.md--- title: Guide weight: 2 --- ℹ️ It is recommended to keep the sidebar not too deep. If you have a lot of content, consider splitting them into multiple sections. "},"title":"Organize Files"},"/en/docs/guide/shortcodes/":{"data":{"":"Hugo Shortcodes are simple snippets inside your content files calling built-in or custom templates.\nHextra provides a collection of beautiful shortcodes to enhance your content.\nCallout Cards Details FileTree Icon Steps Tabs "},"title":"Shortcodes"},"/en/docs/guide/shortcodes/_index.fa/":{"data":{"":"کدهای کوتاه Hugo قطعه‌های ساده‌ای در داخل پرونده‌های محتوای شما هستند که قالب‌های داخلی یا سفارشی را فراخوانی می‌کنند.\nهگزترا مجموعه‌ای از کدهای کوتاه زیبا را برای بهبود محتوای شما ارائه می‌کند.\nFileTree آیکون جزئیات زبانه‌ها فراخوانی کارت‌ها مراحل "},"title":"کدهای کوتاه"},"/en/docs/guide/shortcodes/_index.zh-cn/":{"data":{"":"Hugo 短代码 是你的内容文件中调用内置或自定义模板的简单片段。\nHextra 提供了一系列美观的短代码以增强你的内容。\n注意事项 卡片 文件树 图标 步骤 标签 "},"title":"短代码"},"/en/docs/guide/shortcodes/callout.fa/":{"data":{"":"یک کامپوننت داخلی برای نشان دادن اطلاعات مهم به خواننده.","استفاده#استفاده":"پیش‌فرض 🌐 Hugo را می‌توانید برای ایجاد طیف گسترده‌ای از وب‌سایت‌ها، از جمله وبلاگ‌ها، نمونه‌کارها، سایت‌های مستندسازی و غیره استفاده کرد. {{\u003c callout emoji=\"🌐\" \u003e}} Hugo را می‌توانید برای ایجاد طیف گسترده‌ای از وب‌سایت‌ها، از جمله وبلاگ‌ها، نمونه‌کارها، سایت‌های مستندسازی و غیره استفاده کرد. {{\u003c /callout \u003e}} اطلاعات ℹ️ لطفا برای مشاهده آخرین نسخه‌ها به گیت‌هاب مراجعه کنید. {{\u003c callout type=\"info\" \u003e}} لطفا برای مشاهده آخرین نسخه‌ها به گیت‌هاب مراجعه کنید. {{\u003c /callout \u003e}} هشدار ⚠️ این API در نسخه بعدی منسوخ خواهد شد. {{\u003c callout type=\"warning\" \u003e}} این API در نسخه بعدی منسوخ خواهد شد. {{\u003c /callout \u003e}} خطا 🚫 مشکلی پیش آمد و اتفاقی رخ خواهد شد. {{\u003c callout type=\"error\" \u003e}} مشکلی پیش آمد و اتفاقی رخ خواهد شد. {{\u003c /callout \u003e}} ","مثال#مثال":" 👾 فراخوانی یک متن کوتاه است که برای جلب توجه در نظر گرفته شده است. ℹ️ فراخوانی یک متن کوتاه است که برای جلب توجه در نظر گرفته شده است. ⚠️ فراخوانی یک متن کوتاه است که برای جلب توجه در نظر گرفته شده است. 🚫 فراخوانی یک متن کوتاه است که برای جلب توجه در نظر گرفته شده است. "},"title":"فراخوانی"},"/en/docs/guide/shortcodes/callout.zh-cn/":{"data":{"":"向读者显示重要信息的内置组件。","example#Example":" 👾 标注是一段旨在吸引注意力的短文本 ℹ️ 标注是一段旨在吸引注意力的短文本。 ⚠️ 标注是一段旨在吸引注意力的短文本。 🚫 标注是一段旨在吸引注意力的短文本。 ","usage#Usage":"Default 🌐 Hugo 可用于创建各种网站，包括博客、作品集、文档网站等 {{\u003c callout emoji=\"🌐\" \u003e}} Hugo 可用于创建各种网站，包括博客、作品集、文档网站等 {{\u003c /callout \u003e}} Info ℹ️ 请访问 GitHub 查看最新版本 {{\u003c callout type=\"info\" \u003e}} 请访问 GitHub 查看最新版本 {{\u003c /callout \u003e}} Warning ⚠️ 该 API 将在下一版本中弃用 {{\u003c callout type=\"warning\" \u003e}} **标注**是一段旨在吸引注意力的简短文字 {{\u003c /callout \u003e}} Error 🚫 出问题了，要爆炸了 {{\u003c callout type=\"error\" \u003e}} 出问题了，要爆炸了 {{\u003c /callout \u003e}} "},"title":"标注"},"/en/docs/guide/shortcodes/callout/":{"data":{"":"A built-in component to show important information to the reader.","example#Example":" 👾 A callout is a short piece of text intended to attract attention. ℹ️ A callout is a short piece of text intended to attract attention. ⚠️ A callout is a short piece of text intended to attract attention. 🚫 A callout is a short piece of text intended to attract attention. ","usage#Usage":"Default 🌐 Hugo can be used to create a wide variety of websites, including blogs, portfolios, documentation sites, and more. {{\u003c callout emoji=\"🌐\" \u003e}} Hugo can be used to create a wide variety of websites, including blogs, portfolios, documentation sites, and more. {{\u003c /callout \u003e}} Info ℹ️ Please visit GitHub to see the latest releases. {{\u003c callout type=\"info\" \u003e}} Please visit GitHub to see the latest releases. {{\u003c /callout \u003e}} Warning ⚠️ This API will be deprecated in the next version. {{\u003c callout type=\"warning\" \u003e}} A **callout** is a short piece of text intended to attract attention. {{\u003c /callout \u003e}} Error 🚫 Something went wrong and it’s going to explode. {{\u003c callout type=\"error\" \u003e}} Something went wrong and it's going to explode. {{\u003c /callout \u003e}} "},"title":"Callout"},"/en/docs/guide/shortcodes/cards.fa/":{"data":{"":"","استفاده#استفاده":" {{\u003c/* cards */\u003e}} {{\u003c/* card link=\"../callout\" title=\"فراخوانی\" icon=\"warning\" */\u003e}} {{\u003c/* card link=\"/fa\" title=\"بدون آیکون\" */\u003e}} {{\u003c/* /cards */\u003e}} {{\u003c/* cards */\u003e}} {{\u003c/* card link=\"/\" title=\"کارت تصویر\" image=\"https://source.unsplash.com/featured/800x600?landscape\" subtitle=\"یک چشم‌انداز Unsplash\" */\u003e}} {{\u003c/* card link=\"/\" title=\"تصویر محلی\" image=\"/images/card-image-unprocessed.jpg\" subtitle=\"تصویر خام در دایرکتوری استاتیک است.\" */\u003e}} {{\u003c/* card link=\"/\" title=\"تصویر محلی\" image=\"images/space.jpg\" subtitle=\"تصویر در دایرکتوری assets می‌باشد و پردازش توسط Hugo شده است.\" method=\"Resize\" options=\"600x q80 webp\" */\u003e}} {{\u003c/* /cards */\u003e}} ","مثال#مثال":" فراخوانی بدون آیکون کارت تصویریک چشم‌انداز Unsplash تصویر محلیتصویر خام در دایرکتوری استاتیک است. تصویر محلیتصویر در دایرکتوری assets می‌باشد و پردازش توسط Hugo شده است. ","پارامترهای-کارت#پارامترهای کارت":" پارامتر توضیحات link نشانی اینترنتی (داخلی یا خارجی). title عنوان برای کارت. subtitle عنوان زیرنویس (از مارک‌داون پشتیبانی می‌کند).. icon نام آیکون. ","کارت-تصویر#کارت تصویر":"علاوه بر این، کارت از افزودن تصویر و پردازش از طریق این پارامترها پشتیبانی می‌کند:\nپارامتر توضیحات image نشانی اینترنتی تصویر کارت را مشخص می‌کند. method روش پردازش تصویر Hugo را تنظیم می‌کند. options گزینه‌های پردازش تصویر Hugo را پیکربندی می‌کند. کارت از سه نوع تصویر پشتیبانی می‌کند:\nتصویر از راه دور: نشانی اینترنتی کامل در پارامتر image. تصویر استاتیک: از مسیر نسبی در دایرکتوری static/ Hugo استفاده کنید. تصویر پردازش شده: از مسیر نسبی در دایرکتوری assets/ Hugo استفاده کنید. هگزترا در صورت نیاز به پردازش تصویر در حین ساخت، به طور خودکار تشخیص می‌دهد و پارامتر options یا تنظیمات پیش‌فرض را اعمال می‌کند (تغییر اندازه، 800x، کیفیت 80، فرمت WebP). در حال حاضر این method را پشتیبانی می‌کند: Resize، Fit، Fill و Crop.\nبرای اطلاعات بیشتر در مورد دستورات، روش‌ها و گزینه‌های پردازش تصویر داخلی Hugo به مستندات پردازش تصویر آن‌ها مراجعه کنید."},"title":"کارت‌ها"},"/en/docs/guide/shortcodes/cards.zh-cn/":{"data":{"":"","image-card#Image Card":"此外，该卡还支持通过以下参数添加图像和处理：\nParameter Description image 指定卡片的图像 URL. method 设置 Hugo 的图像处理方法。 options 配置 Hugo 的图像处理选项。 卡片支持三种图像：\n远程图片：完整网址应放置在 image 参数中 静态图片：使用 Hugo 的 static/ 目录中的相对路径 处理过的图片：使用 Hugo 的 assets/ 目录中的相对路径 Hextra 在构建过程中会自动检测图片是否需要处理，并根据需要应用 options 参数或默认设置（缩放，800x，质量 80，WebP 格式）。\n它目前支持以下处理方法：Resize（缩放）、Fit（适应）、Fill（填充）和 Crop（裁剪）。\n有关 Hugo 内置图像处理命令、方法和选项的更多信息，请参阅他们的 Image Processing Documentation.","使用#使用":" {{\u003c/* cards */\u003e}} {{\u003c/* card link=\"../callout\" title=\"Callout\" icon=\"warning\" */\u003e}} {{\u003c/* card link=\"/\" title=\"No Icon\" */\u003e}} {{\u003c/* /cards */\u003e}} {{\u003c/* cards */\u003e}} {{\u003c/* card link=\"/\" title=\"Image Card\" image=\"https://source.unsplash.com/featured/800x600?landscape\" subtitle=\"Unsplash Landscape\" */\u003e}} {{\u003c/* card link=\"/\" title=\"Local Image\" image=\"/images/card-image-unprocessed.jpg\" subtitle=\"Raw image under static directory.\" */\u003e}} {{\u003c/* card link=\"/\" title=\"Local Image\" image=\"images/space.jpg\" subtitle=\"Image under assets directory, processed by Hugo.\" method=\"Resize\" options=\"600x q80 webp\" */\u003e}} {{\u003c/* /cards */\u003e}} ","卡片参数#卡片参数":" Parameter Description link URL（内部或外部） title 卡片的标题 subtitle 字幕标题（支持 Markdown） icon 图标的名称 ","示例#示例":" Callout No Icon Image CardUnsplash Landscape Local ImageRaw image under static directory. Local ImageImage under assets directory, processed by Hugo. "},"title":"Cards"},"/en/docs/guide/shortcodes/cards/":{"data":{"":"","card-parameters#Card Parameters":" Parameter Description link URL (internal or external). title Title heading for the card. subtitle Subtitle heading (supports Markdown). icon Name of the icon. ","example#Example":" Callout No Icon Image CardUnsplash Landscape Local ImageRaw image under static directory. Local ImageImage under assets directory, processed by Hugo. ","image-card#Image Card":"Additionally, the card supports adding image and processing through these parameters:\nParameter Description image Specifies the image URL for the card. method Sets Hugo’s image processing method. options Configures Hugo’s image processing options. Card supports three kinds of images:\nRemote image: the full URL in the image parameter. Static image: use the relative path in Hugo’s static/ directory. Processed image: use the relative path in Hugo’s assets/ directory. Hextra auto-detects if image processing is needed during build and applies the options parameter or default settings (Resize, 800x, Quality 80, WebP Format). It currently supports these method: Resize, Fit, Fill and Crop.\nFor more on Hugo’s built in image processing commands, methods, and options see their Image Processing Documentation.","usage#Usage":" {{\u003c/* cards */\u003e}} {{\u003c/* card link=\"../callout\" title=\"Callout\" icon=\"warning\" */\u003e}} {{\u003c/* card link=\"/\" title=\"No Icon\" */\u003e}} {{\u003c/* /cards */\u003e}} {{\u003c/* cards */\u003e}} {{\u003c/* card link=\"/\" title=\"Image Card\" image=\"https://source.unsplash.com/featured/800x600?landscape\" subtitle=\"Unsplash Landscape\" */\u003e}} {{\u003c/* card link=\"/\" title=\"Local Image\" image=\"/images/card-image-unprocessed.jpg\" subtitle=\"Raw image under static directory.\" */\u003e}} {{\u003c/* card link=\"/\" title=\"Local Image\" image=\"images/space.jpg\" subtitle=\"Image under assets directory, processed by Hugo.\" method=\"Resize\" options=\"600x q80 webp\" */\u003e}} {{\u003c/* /cards */\u003e}} "},"title":"Cards"},"/en/docs/guide/shortcodes/details.fa/":{"data":{"":"یک کامپوننت داخلی برای نمایش محتوای قابل باز و بسته شدن.","استفاده#استفاده":" {{%/* details title=\"جزئیات\" */%}} این محتوای جزئیات است. مارک‌داون **پشتیبانی می‌شود**. {{%/* /details */%}} {{%/* details title=\"برای نمایش روی من کلیک کنید\"closed=\"true\" */%}} این به طور پیش‌فرض پنهان می‌شود. {{%/* /details */%}} ","مثال#مثال":" "},"title":"جزئیات"},"/en/docs/guide/shortcodes/details.zh-cn/":{"data":{"":"用于显示可折叠内容的内置组件。","usage#Usage":" {{%/* details title=\"Details\" */%}} 这是细节的内容 **支持** Markdown {{%/* /details */%}} {{%/* details title=\"Click me to reveal\" closed=\"true\" */%}} 默认情况下这将被隐藏 {{%/* /details */%}} ","示例#示例":" "},"title":"详情"},"/en/docs/guide/shortcodes/details/":{"data":{"":"A built-in component to display a collapsible content.","example#Example":" ","usage#Usage":" {{%/* details title=\"Details\" */%}} This is the content of the details. Markdown is **supported**. {{%/* /details */%}} {{%/* details title=\"Click me to reveal\" closed=\"true\" */%}} This will be hidden by default. {{%/* /details */%}} "},"title":"Details"},"/en/docs/guide/shortcodes/filetree.fa/":{"data":{"":"","استفاده#استفاده":" Markdown{{\u003c/* filetree/container */\u003e}} {{\u003c/* filetree/folder name=\"content\" */\u003e}} {{\u003c/* filetree/file name=\"_index.md\" */\u003e}} {{\u003c/* filetree/folder name=\"docs\" state=\"closed\" */\u003e}} {{\u003c/* filetree/file name=\"_index.md\" */\u003e}} {{\u003c/* filetree/file name=\"introduction.md\" */\u003e}} {{\u003c/* filetree/file name=\"introduction.fa.md\" */\u003e}} {{\u003c/* /filetree/folder */\u003e}} {{\u003c/* /filetree/folder */\u003e}} {{\u003c/* filetree/file name=\"hugo.toml\" */\u003e}} {{\u003c/* /filetree/container */\u003e}} ","مثال#مثال":" content _index.md docs _index.md introduction.md introduction.fa.md hugo.toml "},"title":"FileTree"},"/en/docs/guide/shortcodes/filetree.zh-cn/":{"data":{"":"","用法#用法":" Markdown{{\u003c/* filetree/container */\u003e}} {{\u003c/* filetree/folder name=\"content\" */\u003e}} {{\u003c/* filetree/file name=\"_index.md\" */\u003e}} {{\u003c/* filetree/folder name=\"docs\" state=\"closed\" */\u003e}} {{\u003c/* filetree/file name=\"_index.md\" */\u003e}} {{\u003c/* filetree/file name=\"introduction.md\" */\u003e}} {{\u003c/* filetree/file name=\"introduction.fr.md\" */\u003e}} {{\u003c/* /filetree/folder */\u003e}} {{\u003c/* /filetree/folder */\u003e}} {{\u003c/* filetree/file name=\"hugo.toml\" */\u003e}} {{\u003c/* /filetree/container */\u003e}} ","示例#示例":" content _index.md docs _index.md introduction.md introduction.fr.md hugo.toml "},"title":"文件树"},"/en/docs/guide/shortcodes/filetree/":{"data":{"":"","example#Example":" content _index.md docs _index.md introduction.md introduction.fr.md hugo.toml ","usage#Usage":" Markdown{{\u003c/* filetree/container */\u003e}} {{\u003c/* filetree/folder name=\"content\" */\u003e}} {{\u003c/* filetree/file name=\"_index.md\" */\u003e}} {{\u003c/* filetree/folder name=\"docs\" state=\"closed\" */\u003e}} {{\u003c/* filetree/file name=\"_index.md\" */\u003e}} {{\u003c/* filetree/file name=\"introduction.md\" */\u003e}} {{\u003c/* filetree/file name=\"introduction.fr.md\" */\u003e}} {{\u003c/* /filetree/folder */\u003e}} {{\u003c/* /filetree/folder */\u003e}} {{\u003c/* filetree/file name=\"hugo.toml\" */\u003e}} {{\u003c/* /filetree/container */\u003e}} "},"title":"FileTree"},"/en/docs/guide/shortcodes/icon.fa/":{"data":{"":"برای استفاده از این کد کوتاه درون‌خطی، باید آن را در پیکربندی فعال کنید:\nhugo.yamlenableInlineShortcodes: true فهرست آیکون‌های موجود را می‌توانید در data/icons.yaml پیدا کنید.","استفاده#استفاده":" {{\u003c/* icon \"github\" */\u003e}} آیکون‌های با طرح‌های متفاوت در Heroicons نسخه ۱ خارج از جعبه در دسترس هستند.\nچجوری آیکون‌های خودمان را اضافه کنیم پرونده data/icons.yaml را ایجاد کنید، سپس آیکون‌های SVG خود را در فرمت زیر اضافه کنید:\ndata/icons.yamlyour-icon: \u003csvg\u003eyour icon svg content\u003c/svg\u003e سپس می‌توان آن را در کد کوتاه مانند زیر استفاده کرد:\n{{\u003c/* icon \"your-icon\" */\u003e}} {{\u003c/* card icon=\"your-icon\" */\u003e}} نکته: Iconify Design مکانی عالی برای پیدا کردن آیکون‌های SVG برای سایت شما است.","مثال#مثال":" "},"title":"آیکون"},"/en/docs/guide/shortcodes/icon.zh-cn/":{"data":{"":"要内联使用此短代码，需要在配置中启用内联短代码：\nhugo.yamlenableInlineShortcodes: true 可用图标列表可以在以下位置找到 data/icons.yaml.","用法#用法":" {{\u003c/* icon \"github\" */\u003e}} Heroicons v1 轮廓图标开箱即用\n如何添加自己的图标 创建 data/icons.yaml 文件，然后按以下格式添加您自己的 SVG 图标：\ndata/icons.yamlyour-icon: \u003csvg\u003eyour icon svg content\u003c/svg\u003e 然后可以在短代码中使用它，如下所示：\n{{\u003c/* icon \"your-icon\" */\u003e}} {{\u003c/* card icon=\"your-icon\" */\u003e}} 提示：Iconify Design 是为您的网站查找 SVG 图标的好地方","示例#示例":" "},"title":"图标"},"/en/docs/guide/shortcodes/icon/":{"data":{"":"To use this shortcode inline, inline shortcode needs to be enabled in the config:\nhugo.yamlenableInlineShortcodes: true List of available icons can be found in data/icons.yaml.","example#Example":" ","usage#Usage":" {{\u003c/* icon \"github\" */\u003e}} Heroicons v1 outline icons are available out of the box.\nHow to add your own icons Create data/icons.yaml file, then add your own SVG icons in the following format:\ndata/icons.yamlyour-icon: \u003csvg\u003eyour icon svg content\u003c/svg\u003e It then can be used in the shortcode like this:\n{{\u003c/* icon \"your-icon\" */\u003e}} {{\u003c/* card icon=\"your-icon\" */\u003e}} Tip: Iconify Design is a great place to find SVG icons for your site."},"title":"Icon"},"/en/docs/guide/shortcodes/steps.fa/":{"data":{"":"یک کامپوننت داخلی برای نمایش یک سری مراحل.","استفاده#استفاده":"سرتیتر مارک‌داون h3 را در کد کوتاه steps قرار دهید.\n{{%/* steps */%}} ### مرحله ۱ این اولین مرحله است. ### مرحله ۲ این دومین مرحله است. {{%/* /steps */%}} ","مثال#مثال":" مرحله ۱ این اولین مرحله است.\nمرحله ۲ این دومین مرحله است.\nمرحله ۳ این سومین مرحله است."},"title":"مراحل"},"/en/docs/guide/shortcodes/steps.zh-cn/":{"data":{"":"A built-in component to display a series of steps.","使用#使用":"将 Markdown h3 标题放入 steps 短代码中。\n{{%/* steps */%}} ### Step 1 This is the first step. ### Step 2 This is the second step. {{%/* /steps */%}} ","示例#示例":" 第一步 这是第一步。\n第二步 这是第二步。\n第三步 这是第三步。"},"title":"步骤"},"/en/docs/guide/shortcodes/steps/":{"data":{"":"A built-in component to display a series of steps.","example#Example":" Step 1 This is the first step.\nStep 2 This is the second step.\nStep 3 This is the third step.","usage#Usage":"Put Markdown h3 header within steps shortcode.\n{{%/* steps */%}} ### Step 1 This is the first step. ### Step 2 This is the second step. {{%/* /steps */%}} "},"title":"Steps"},"/en/docs/guide/shortcodes/tabs.fa/":{"data":{"":"","استفاده#استفاده":"پیش‌فرض {{\u003c tabs items=\"JSON,YAML,TOML\" \u003e}} {{\u003c tab \u003e}}**JSON**: جیسون معادل اختصاری عبارت JavaScript Object Notation به معنی «نمادگذاری اشیا در جاوا اسکریپت» است. جیسون یک قالب استاندارد باز است که امکان تبادل داده‌ها در وب با استفاده از جفت‌های خصوصیت-کلید را ممکن ساخته است.{{\u003c /tab \u003e}} {{\u003c tab \u003e}}**YAML**: یک زبان برای سریال‌سازی داده قابل-خواندن-برای-انسان است.{{\u003c /tab \u003e}} {{\u003c tab \u003e}}**TOML**: یک قالب پرونده پیکربندی که به هدف سادگی در خوانایی به کمک داشتن معانی مشخص با هدف «کمینه» و مینیمال بودن ارائه شده است.{{\u003c /tab \u003e}} {{\u003c /tabs \u003e}} مشخص کردن زبانه‌ پیش‌فرض از ویژگی defaultIndex برای مشخص کردن زبانه‌ پیش‌فرض استفاده کنید. این شاخص از 0 شروع می‌شود.\n{{\u003c tabs items=\"JSON,YAML,TOML\" defaultIndex=\"1\" \u003e}} {{\u003c tab \u003e}}**JSON**: جیسون معادل اختصاری عبارت JavaScript Object Notation به معنی «نمادگذاری اشیا در جاوا اسکریپت» است. جیسون یک قالب استاندارد باز است که امکان تبادل داده‌ها در وب با استفاده از جفت‌های خصوصیت-کلید را ممکن ساخته است.{{\u003c /tab \u003e}} {{\u003c tab \u003e}}**YAML**: یک زبان برای سریال‌سازی داده قابل-خواندن-برای-انسان است.{{\u003c /tab \u003e}} {{\u003c tab \u003e}}**TOML**: یک قالب پرونده پیکربندی که به هدف سادگی در خوانایی به کمک داشتن معانی مشخص با هدف «کمینه» و مینیمال بودن ارائه شده است.{{\u003c /tab \u003e}} {{\u003c /tabs \u003e}} زبانه‌ YAML به طور پیش‌فرض انتخاب می‌شود.\nJSONYAMLTOML JSON: جیسون معادل اختصاری عبارت JavaScript Object Notation به معنی «نمادگذاری اشیا در جاوا اسکریپت» است. جیسون یک قالب استاندارد باز است که امکان تبادل داده‌ها در وب با استفاده از جفت‌های خصوصیت-کلید را ممکن ساخته است. YAML: یک زبان برای سریال‌سازی داده قابل-خواندن-برای-انسان است. TOML: یک قالب پرونده پیکربندی که به هدف سادگی در خوانایی به کمک داشتن معانی مشخص با هدف «کمینه» و مینیمال بودن ارائه شده است. استفاده از مارک‌داون سینتکس مارک‌داون از جمله بلوک کد نیز پشتیبانی می‌شود:\n{{\u003c tabs items=\"JSON,YAML,TOML\" \u003e}} {{\u003c tab \u003e}} ```json { \"سلام\": \"دنیا\" } ``` {{\u003c /tab \u003e}} ... زبانه‌های دیگر را به همین ترتیب اضافه کنید {{\u003c /tabs \u003e}} JSONYAMLTOML { \"سلام\": \"دنیا\" } سلام: دنیا سلام = \"دنیا\" ","مثال#مثال":"JSONYAMLTOML JSON: جیسون معادل اختصاری عبارت JavaScript Object Notation به معنی «نمادگذاری اشیا در جاوا اسکریپت» است. جیسون یک قالب استاندارد باز است که امکان تبادل داده‌ها در وب با استفاده از جفت‌های خصوصیت-کلید را ممکن ساخته است. YAML: یک زبان برای سریال‌سازی داده قابل-خواندن-برای-انسان است. TOML: یک قالب پرونده پیکربندی که به هدف سادگی در خوانایی به کمک داشتن معانی مشخص با هدف «کمینه» و مینیمال بودن ارائه شده است. "},"title":"زبانه‌ها"},"/en/docs/guide/shortcodes/tabs.zh-cn/":{"data":{"":"","使用#使用":"默认情况下 {{\u003c tabs items=\"JSON,YAML,TOML\" \u003e}} {{\u003c tab \u003e}}**JSON**: JavaScript Object Notation (JSON) is a standard text-based format for representing structured data based on JavaScript object syntax.{{\u003c /tab \u003e}} {{\u003c tab \u003e}}**YAML**: YAML is a human-readable data serialization language.{{\u003c /tab \u003e}} {{\u003c tab \u003e}}**TOML**: TOML aims to be a minimal configuration file format that's easy to read due to obvious semantics.{{\u003c /tab \u003e}} {{\u003c /tabs \u003e}} 指定索引 使用 defaultIndex 属性指定选定的选项卡。索引从 0 开始。\n{{\u003c tabs items=\"JSON,YAML,TOML\" defaultIndex=\"1\" \u003e}} {{\u003c tab \u003e}}**JSON**: JavaScript Object Notation (JSON) is a standard text-based format for representing structured data based on JavaScript object syntax.{{\u003c /tab \u003e}} {{\u003c tab \u003e}}**YAML**: YAML is a human-readable data serialization language.{{\u003c /tab \u003e}} {{\u003c tab \u003e}}**TOML**: TOML aims to be a minimal configuration file format that's easy to read due to obvious semantics.{{\u003c /tab \u003e}} {{\u003c /tabs \u003e}} 默认为 YAML\nJSONYAMLTOML JSON: JavaScript Object Notation (JSON) is a standard text-based format for representing structured data based on JavaScript object syntax. YAML: YAML is a human-readable data serialization language. TOML: TOML aims to be a minimal configuration file format that’s easy to read due to obvious semantics. 使用 Markdown 还支持包括代码块的 Markdown 语法：\n{{\u003c tabs items=\"JSON,YAML,TOML\" \u003e}} {{\u003c tab \u003e}} ```json { \"hello\": \"world\" } ``` {{\u003c /tab \u003e}} ... add other tabs similarly {{\u003c /tabs \u003e}} JSONYAMLTOML { \"hello\": \"world\" } hello: world hello = \"world\" ","示例#示例":"JSONYAMLTOML JSON: JavaScript Object Notation (JSON) is a standard text-based format for representing structured data based on JavaScript object syntax. YAML: YAML is a human-readable data serialization language. TOML: TOML aims to be a minimal configuration file format that’s easy to read due to obvious semantics. "},"title":"标签页"},"/en/docs/guide/shortcodes/tabs/":{"data":{"":"","example#Example":"JSONYAMLTOML JSON: JavaScript Object Notation (JSON) is a standard text-based format for representing structured data based on JavaScript object syntax. YAML: YAML is a human-readable data serialization language. TOML: TOML aims to be a minimal configuration file format that’s easy to read due to obvious semantics. ","usage#Usage":"Default {{\u003c tabs items=\"JSON,YAML,TOML\" \u003e}} {{\u003c tab \u003e}}**JSON**: JavaScript Object Notation (JSON) is a standard text-based format for representing structured data based on JavaScript object syntax.{{\u003c /tab \u003e}} {{\u003c tab \u003e}}**YAML**: YAML is a human-readable data serialization language.{{\u003c /tab \u003e}} {{\u003c tab \u003e}}**TOML**: TOML aims to be a minimal configuration file format that's easy to read due to obvious semantics.{{\u003c /tab \u003e}} {{\u003c /tabs \u003e}} Specify Selected Index Use defaultIndex property to specify the selected tab. The index starts from 0.\n{{\u003c tabs items=\"JSON,YAML,TOML\" defaultIndex=\"1\" \u003e}} {{\u003c tab \u003e}}**JSON**: JavaScript Object Notation (JSON) is a standard text-based format for representing structured data based on JavaScript object syntax.{{\u003c /tab \u003e}} {{\u003c tab \u003e}}**YAML**: YAML is a human-readable data serialization language.{{\u003c /tab \u003e}} {{\u003c tab \u003e}}**TOML**: TOML aims to be a minimal configuration file format that's easy to read due to obvious semantics.{{\u003c /tab \u003e}} {{\u003c /tabs \u003e}} The YAML tab will be selected by default.\nJSONYAMLTOML JSON: JavaScript Object Notation (JSON) is a standard text-based format for representing structured data based on JavaScript object syntax. YAML: YAML is a human-readable data serialization language. TOML: TOML aims to be a minimal configuration file format that’s easy to read due to obvious semantics. Use Markdown Markdown syntax including code block is also supported:\n{{\u003c tabs items=\"JSON,YAML,TOML\" \u003e}} {{\u003c tab \u003e}} ```json { \"hello\": \"world\" } ``` {{\u003c /tab \u003e}} ... add other tabs similarly {{\u003c /tabs \u003e}} JSONYAMLTOML { \"hello\": \"world\" } hello: world hello = \"world\" "},"title":"Tabs"},"/en/docs/guide/syntax-highlighting.fa/":{"data":{"":"هیوگو از Chroma، یک برجسته‌کننده سینتکس عمومی در Go خالص، برای برجسته‌سازی کردن سینتکس استفاده می‌کند. توصیه می‌شود از بک‌تیک برای بلوک‌های کد در محتوای مارک‌داون استفاده کنید. مثلا:\nMarkdown```python def say_hello(): print(\"سلام!\") ``` به صورت زیر رندر خواهد شد:\ndef say_hello(): print(\"سلام!\") ","زبانهای-پشتیبانی-شده#زبان‌های پشتیبانی شده":"برای مشاهده فهرست زبان‌های پشتیبانی شده، لطفا به مستندات Chroma مراجعه کنید.","ویژگیها#ویژگی‌ها":"Filename برای افزودن نام پرونده یا عنوان به بلوک کد، filename را مشخص کنید:\nMarkdown```python {filename=\"hello.py\"} def say_hello(): print(\"سلام!\") ``` hello.pydef say_hello(): print(\"سلام!\") شماره خطوط برای تنظیم شماره خطوط، ویژگی linenos را روی table قرار دهید و به صورت اختیاری linenostart را روی شماره‌ای که خط شروع می‌شود تنظیم کنید:\nMarkdown```python {linenos=table,linenostart=42} def say_hello(): print(\"سلام!\") ``` 42 43 def say_hello(): print(\"سلام!\") برجسته کردن خطوط برای برجسته کردن خطوط، ویژگی hl_lines را به فهرستی از شماره خطوط تنظیم کنید:\nMarkdown```python {linenos=table,hl_lines=[2,4],linenostart=1,filename=\"hello.py\"} def say_hello(): print(\"سلام!\") def main(): say_hello() ``` hello.py 1 2 3 4 5 def say_hello(): print(\"سلام!\") def main(): say_hello() دکمه کپی به طور پیش‌فرض، دکمه کپی برای بلوک‌های کد فعال است."},"title":"برجسته‌کردن سینتکس"},"/en/docs/guide/syntax-highlighting.zh-cn/":{"data":{"":"Hugo 使用 Chroma，一种纯 Golang 实现的代码高亮渲染器。 建议对 Markdown 内容中的代码块使用反引号，例如：\nMarkdown```python def say_hello(): print(\"Hello!\") ``` 将呈现为：\ndef say_hello(): print(\"Hello!\") ","支持的编程语言#支持的编程语言":"如需了解支持的编程语言，转至 Chroma’s documentation。","特性#特性":"文件名 要向代码块添加文件名或标题，请设置 filename：\nMarkdown```python {filename=\"hello.py\"} def say_hello(): print(\"Hello!\") ``` hello.pydef say_hello(): print(\"Hello!\") 行号 如需设置行号，将 linenos 设置为 table，并将 linenostart 设置为起始行号：\nMarkdown```python {linenos=table,linenostart=42} def say_hello(): print(\"Hello!\") ``` 42 43 def say_hello(): print(\"Hello!\") 高亮行 显示高亮行，设置 hl_lines 为行号：\nMarkdown```python {linenos=table,hl_lines=[2,4],linenostart=1,filename=\"hello.py\"} def say_hello(): print(\"Hello!\") def main(): say_hello() ``` hello.py 1 2 3 4 5 def say_hello(): print(\"Hello!\") def main(): say_hello() 复制按钮 默认情况下，代码块复制按钮已自动启用。"},"title":"代码高亮"},"/en/docs/guide/syntax-highlighting/":{"data":{"":"Hugo uses Chroma, a general purpose syntax highlighter in pure Go, for syntax highlighting. It is recommended to use backticks for code blocks in Markdown content. For example:\nMarkdown```python def say_hello(): print(\"Hello!\") ``` will be rendered as:\ndef say_hello(): print(\"Hello!\") ","features#Features":"Filename To add a filename or title to the code block, set attribute filename:\nMarkdown```python {filename=\"hello.py\"} def say_hello(): print(\"Hello!\") ``` hello.pydef say_hello(): print(\"Hello!\") Line Numbers To set line numbers, set attribute linenos to table and optionally set linenostart to the starting line number:\nMarkdown```python {linenos=table,linenostart=42} def say_hello(): print(\"Hello!\") ``` 42 43 def say_hello(): print(\"Hello!\") Highlighting Lines To highlight lines, set attribute hl_lines to a list of line numbers:\nMarkdown```python {linenos=table,hl_lines=[2,4],linenostart=1,filename=\"hello.py\"} def say_hello(): print(\"Hello!\") def main(): say_hello() ``` hello.py 1 2 3 4 5 def say_hello(): print(\"Hello!\") def main(): say_hello() Copy Button By default, copy button is enabled for code blocks.","supported-languages#Supported Languages":"For a list of supported languages, please see the Chroma documentation."},"title":"Syntax Highlighting"},"/en/showcase/":{"data":{"":" AXIVO Docs Stanford CS 40 Helix Docs Clever Cloud Documentation OWASP AI Security and Privacy Guide Osuny Porter HITSZ OpenAuto LutheranConfessions Hextra Starter Template "},"title":"Showcase"}}